{"version":3,"file":"module.js","sources":["../../src/scripts/constants.js","../../src/scripts/lib/Logger.js","../../src/scripts/pixi/pointer.js","../../src/scripts/keybindings.js","../../src/scripts/settings/settings-menu.js","../../src/scripts/settings.js","../../src/scripts/pixi/container.js","../../src/scripts/main.js","../../src/module.js"],"sourcesContent":["const CONSTANTS = {\n    MODULE_ID: \"pointer\",\n    PATH: `modules/pointer/`,\n    FLAGS: {\n        SETTINGS: \"settings\",\n    },\n};\nCONSTANTS.PATH = `modules/${CONSTANTS.MODULE_ID}/`;\nexport default CONSTANTS;\n","import CONSTANTS from \"../constants\";\n\n// ================================\n// Logger utility\n// ================================\nexport default class Logger {\n    static get DEBUG() {\n        return (\n            game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n            game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n        );\n    }\n    // export let debugEnabled = 0;\n    // 0 = none, warnings = 1, debug = 2, all = 3\n\n    static debug(msg, ...args) {\n        try {\n            if (\n                game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n                game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n            ) {\n                console.log(`DEBUG | ${CONSTANTS.MODULE_ID} | ${msg}`, ...args);\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n        return msg;\n    }\n\n    static logObject(...args) {\n        return this.log(\"\", args);\n    }\n\n    static log(message, ...args) {\n        try {\n            message = `${CONSTANTS.MODULE_ID} | ${message}`;\n            console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return message;\n    }\n\n    static notify(message, ...args) {\n        try {\n            message = `${CONSTANTS.MODULE_ID} | ${message}`;\n            ui.notifications?.notify(message);\n            console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return message;\n    }\n\n    static info(info, notify = false, ...args) {\n        try {\n            info = `${CONSTANTS.MODULE_ID} | ${info}`;\n            if (notify) {\n                ui.notifications?.info(info);\n            }\n            console.log(info.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return info;\n    }\n\n    static warn(warning, notify = false, ...args) {\n        try {\n            warning = `${CONSTANTS.MODULE_ID} | ${warning}`;\n            if (notify) {\n                ui.notifications?.warn(warning);\n            }\n            console.warn(warning.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return warning;\n    }\n\n    static errorObject(...args) {\n        return this.error(\"\", false, args);\n    }\n\n    static error(error, notify = true, ...args) {\n        try {\n            error = `${CONSTANTS.MODULE_ID} | ${error}`;\n            if (notify) {\n                ui.notifications?.error(error);\n            }\n            console.error(error.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return new Error(error.replace(\"<br>\", \"\\n\"));\n    }\n\n    static errorPermanent(error, notify = true, ...args) {\n        try {\n            error = `${CONSTANTS.MODULE_ID} | ${error}`;\n            if (notify) {\n                ui.notifications?.error(error, {\n                    permanent: true,\n                });\n            }\n            console.error(error.replace(\"<br>\", \"\\n\"), ...args);\n        } catch (e) {\n            console.error(e.message);\n        }\n        return new Error(error.replace(\"<br>\", \"\\n\"));\n    }\n\n    static timelog(message) {\n        this.warn(Date.now(), message);\n    }\n\n    static i18n = (key) => {\n        return game.i18n.localize(key)?.trim();\n    };\n\n    static i18nFormat = (key, data = {}) => {\n        return game.i18n.format(key, data)?.trim();\n    };\n\n    // setDebugLevel = (debugText): void => {\n    //   debugEnabled = { none: 0, warn: 1, debug: 2, all: 3 }[debugText] || 0;\n    //   // 0 = none, warnings = 1, debug = 2, all = 3\n    //   if (debugEnabled >= 3) CONFIG.debug.hooks = true;\n    // };\n\n    static dialogWarning(message, icon = \"fas fa-exclamation-triangle\") {\n        return `<p class=\"${CONSTANTS.MODULE_ID}-dialog\">\n        <i style=\"font-size:3rem;\" class=\"${icon}\"></i><br><br>\n        <strong style=\"font-size:1.2rem;\">${CONSTANTS.MODULE_ID}</strong>\n        <br><br>${message}\n    </p>`;\n    }\n}\n","import CONSTANTS from \"../constants\";\n\nexport class Pointer extends PIXI.Container {\n    constructor(data = {}, userId = game.userId, gridSize = canvas.grid.size) {\n        super();\n        this.data = foundry.utils.duplicate(data); //{gridSize: data.gridSize};\n\n        this.userId = userId;\n        this.gridSize = gridSize;\n        this.draw();\n    }\n\n    static get defaultSettings() {\n        return this.default(\"pointer\");\n    }\n\n    async draw(newData = this.data) {\n        if (this._drawing) {\n            return;\n        }\n        this._drawing = true;\n        const data = this.data;\n        if (newData.img) {\n            if (this.sprite) {\n                this.sprite.destroy();\n            }\n            const tex = await loadTexture(data.img);\n            this.sprite = this.addChild(new PIXI.Sprite(tex));\n\n            const src = tex.baseTexture.resource.source; // .cloneNode()\n            if (src.tagName === \"VIDEO\") {\n                src.loop = true;\n                src.muted = true;\n                game.video.play(src);\n            }\n            const { height, width } = tex;\n\n            this.sprite.pivot.x = width / 2;\n            this.sprite.pivot.y = height / 2;\n            newData = this.data;\n        }\n\n        if (newData.position) {\n            this.position = data.position;\n            delete data.position;\n        }\n\n        if (newData.scale) {\n            const { height, width } = this.sprite.texture;\n            const ratio = height / width;\n            this.sprite.scale = new PIXI.Point(\n                (this.gridSize / width) * data.scale,\n                (this.gridSize / height) * data.scale * ratio,\n            );\n        }\n\n        if (newData.offset) {\n            this.sprite.position = new PIXI.Point(\n                data.offset.x * this.gridSize * data.scale,\n                data.offset.y * this.gridSize * data.scale,\n            );\n        }\n\n        if (newData.angle) {\n            this.sprite.angle = data.angle;\n        }\n\n        if (newData.tint) {\n            if (this.data.tint.useUser) {\n                if (foundry.utils.isNewerVersion(game.version, 12)) {\n                    this.sprite.tint = Number(\"0x\" + game.users.get(this.userId).color.css.slice(1));\n                } else {\n                    this.sprite.tint = Number(\"0x\" + game.users.get(this.userId).color.slice(1));\n                }\n            } else {\n                this.sprite.tint = Number(\"0x\" + data.tint.color.slice(1));\n            }\n        }\n\n        if (newData.animations) {\n            this.animations = newData.animations;\n            if (this.timeline) {\n                this.timeline.clear();\n            } else {\n                this.timeline = new TimelineMax();\n            }\n            if (this.animations?.rotation?.use) {\n                const rotData = this.animations.rotation;\n                const min = rotData.min,\n                    max = rotData.max,\n                    dur = rotData.dur,\n                    yoyo = rotData.yoyo,\n                    ease =\n                        rotData.easing.method === \"none\" ? \"none\" : rotData.easing.method + \".\" + rotData.easing.type;\n                this.timeline.set(this, { angle: min }, 0);\n                this.timeline.to(this, dur, { angle: max, ease, repeat: -1, yoyo }, 0);\n            } else {\n                this.rotation = 0;\n            }\n            if (this.animations?.scale?.use) {\n                const scaleData = this.animations.scale;\n                const min = scaleData.min,\n                    max = scaleData.max,\n                    dur = scaleData.dur,\n                    yoyo = scaleData.yoyo,\n                    ease =\n                        scaleData.easing.method === \"none\"\n                            ? null\n                            : scaleData.easing.method + \".\" + scaleData.easing.type;\n                this.timeline.set(this.scale, { x: min, y: min }, 0);\n                this.timeline.to(this.scale, dur, { x: max, y: max, ease, repeat: -1, yoyo }, 0);\n            } else {\n                this.scale = new PIXI.Point(1, 1);\n            }\n\n            this.timeline.play();\n        }\n\n        this._drawing = false;\n    }\n\n    async update(udata) {\n        this.data = foundry.utils.mergeObject(this.data, foundry.utils.duplicate(udata));\n        this.draw(foundry.utils.expandObject(udata));\n\n        return;\n    }\n\n    async save() {\n        // do update stuff here\n        const collection = foundry.utils.duplicate(game.settings.get(CONSTANTS.MODULE_ID, \"collection\"));\n        let idx = collection.findIndex((e) => e.id === this.id);\n        const data = foundry.utils.duplicate(this.data);\n        delete data.position;\n        collection[idx] = data;\n        return game.settings.set(CONSTANTS.MODULE_ID, \"collection\", collection);\n    }\n\n    hide() {\n        this.renderable = false;\n    }\n\n    ping(position) {\n        return;\n    }\n\n    destroy(...args) {\n        super.destroy(...args);\n        this.timeline?.kill();\n    }\n}\n\nexport class Ping extends Pointer {\n    draw(newData) {\n        this.renderable = true;\n        super.draw(newData);\n        if (newData?.position) {\n            if (!this.timeline) this.timeline = new TimelineMax();\n\n            const removeTween = this.timeline.getById(\"remove\");\n            if (removeTween) {\n                this.timeline.remove(removeTween);\n            }\n            this.timeline.set(\n                this,\n                {\n                    id: \"remove\",\n                    onComplete: () => {\n                        this.renderable = false;\n                        this.timeline.pause();\n                    },\n                },\n                this.pingDuration || 3,\n            );\n\n            this.timeline.restart();\n        } else this.renderable = false;\n    }\n}\n","let controls;\nimport CONSTANTS from \"./constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport { PointerSettingsMenu } from \"./settings/settings-menu.js\";\nexport default function init() {\n    Logger.debug(\"Pointer Initializing controls\");\n    const settings = foundry.utils.mergeObject(\n        PointerSettingsMenu.defaultSettings.controls,\n        game.user.getFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS)?.controls,\n    );\n    removeListeners();\n\n    setUpControls(settings);\n\n    addListeners();\n}\n\n/**\n * The original version of this function was removed in Foundry VTT v9.\n */\nexport function getKey(event) {\n    if (event.code === \"Space\") return event.code;\n    if (/^Digit/.test(event.code)) return event.code[5];\n    if (event.location === 3 && (event.code in game.keyboard.moveKeys || event.code in game.keyboard.zoomKeys)) {\n        return event.code;\n    }\n    return event.key;\n}\n\nfunction setUpControls(settings) {\n    controls = { pointer: {}, ping: {}, force: {} };\n\n    for (let objKey of [\"ping\", \"pointer\"]) {\n        const keys = settings[objKey].key.split(\" + \");\n        const metaKeys = keys.splice(0, keys.length - 1);\n        controls[objKey].meta = {};\n        for (const meta of [\"Ctrl\", \"Shift\", \"Meta\", \"Alt\"])\n            controls[objKey].meta[meta.toLowerCase() + \"Key\"] = metaKeys.includes(meta);\n\n        if (keys[0]?.includes(\"Click\")) {\n            controls[objKey].event = \"mouse\";\n            if (keys[0].includes(\"Left\")) controls[objKey].button = 0;\n            else controls[objKey].button = 2;\n        } else {\n            controls[objKey].event = \"key\";\n            controls[objKey].key = keys[0];\n        }\n    }\n    controls.ping.pointerActive = settings.ping.pointerActive;\n\n    if (game.user.isGM) {\n        const keys = settings.ping.force.split(\" + \");\n\n        const metaKeys = keys.splice(0, keys.length - 1);\n        controls.force.meta = {};\n        for (const meta of [\"Ctrl\", \"Shift\", \"Meta\", \"Alt\"])\n            controls.force.meta[meta.toLowerCase() + \"Key\"] = metaKeys.includes(meta);\n\n        if (keys[0]?.includes(\"Click\")) {\n            controls.force.event = \"mouse\";\n            if (keys[0].includes(\"Left\")) controls.force.button = 0;\n            else controls.force.button = 2;\n        } else {\n            controls.force.event = \"key\";\n            controls.force.key = keys[0];\n        }\n    }\n}\n\nfunction removeListeners() {\n    if (!controls) return;\n    if (controls.pointer.event === \"key\") {\n        window.removeEventListener(`${controls.pointer.event}down`, onPointerDown);\n        window.removeEventListener(`${controls.pointer.event}up`, onPointerUp);\n    } else {\n        window.removeEventListener(`${controls.pointer.event}down`, onPointerDown);\n        window.removeEventListener(`${controls.pointer.event}up`, onPointerUp);\n    }\n\n    if (controls.ping.event === \"key\") {\n        window.removeEventListener(`${controls.ping.event}down`, onPing);\n    } else {\n        window.removeEventListener(`${controls.ping.event}down`, onPing);\n    }\n\n    if (controls.force.event) {\n        if (controls.force.event === \"key\") {\n            window.removeEventListener(`${controls.ping.event}down`, onForcePing);\n        } else {\n            window.removeEventListener(`${controls.ping.event}down`, onForcePing);\n        }\n    }\n}\n\nfunction addListeners() {\n    if (controls.pointer.event === \"key\") {\n        window.addEventListener(`${controls.pointer.event}down`, onPointerDown);\n        window.addEventListener(`${controls.pointer.event}up`, onPointerUp);\n    } else {\n        window.addEventListener(`${controls.pointer.event}down`, onPointerDown);\n        window.addEventListener(`${controls.pointer.event}up`, onPointerUp);\n    }\n\n    if (controls.ping.event === \"key\") {\n        window.addEventListener(`${controls.ping.event}down`, onPing);\n    } else {\n        window.addEventListener(`${controls.ping.event}down`, onPing);\n    }\n\n    if (controls.force.event) {\n        if (controls.force.event === \"key\") {\n            window.addEventListener(`${controls.ping.event}down`, onForcePing);\n        } else {\n            window.addEventListener(`${controls.ping.event}down`, onForcePing);\n        }\n    }\n}\n\nfunction checkKey(ev, obj) {\n    if (ev.target !== document.body && ev.target !== canvas.app.view) return false;\n    // if (document.activeElement !== document.body) return false;\n\n    const key = getKey(ev);\n    if (key) {\n        if (key?.toUpperCase() !== obj.key?.toUpperCase()) return false;\n    } else {\n        // else pointer event, which always has the correct key\n\n        if (ev.button !== obj.button) return false;\n    }\n\n    for (let key of Object.keys(obj.meta)) {\n        if (obj.meta[key] !== ev[key]) return false;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return true;\n}\n\nfunction onPointerDown(ev) {\n    if (ev.repeat) {\n        return;\n    }\n    if (!checkKey(ev, controls.pointer) || controls.pointer.active) {\n        return;\n    }\n    Logger.debug(\"Pointer Key down\", ev);\n    controls.pointer.active = true;\n    canvas.controls.pointer.start();\n}\n\nfunction onPointerUp(ev) {\n    // Be a bit more liberal here.\n    // since the checkKey method doesn't work as good for key up events\n    if (ev.key && ev.key.toUpperCase() !== controls.pointer.key.toUpperCase()) {\n        return;\n    }\n    // handle mouse interaction differently.. again, so when both are bound to mouse, the pointer does not get deactivated\n    else if (ev.button && !checkKey(ev, controls.pointer)) {\n        return;\n    }\n    Logger.debug(\"Pointer Key up\", ev);\n    controls.pointer.active = false;\n    canvas.controls.pointer.stop();\n}\n\nfunction onPing(ev) {\n    if (controls.ping.pointerActive && !controls.pointer.active) {\n        return;\n    }\n    if (!checkKey(ev, controls.ping)) {\n        return;\n    }\n    Logger.debug(\"Pointer on Ping\", ev);\n    canvas.controls.pointer.ping();\n}\n\nfunction onForcePing(ev) {\n    if (controls.ping.pointerActive && !controls.pointer.active) {\n        return;\n    }\n    if (!checkKey(ev, controls.force)) {\n        return;\n    }\n    Logger.debug(\"Pointer on Force Ping\", ev);\n    canvas.controls.pointer.ping({ force: true });\n}\n","import { Pointer } from \"../pixi/pointer.js\";\nimport { getKey } from \"../keybindings.js\";\nimport CONSTANTS from \"../constants.js\";\nimport Logger from \"../lib/Logger.js\";\n\nexport class PointerSettingsMenu extends FormApplication {\n    static get defaultOptions() {\n        return {\n            ...super.defaultOptions,\n            template: `modules/${CONSTANTS.MODULE_ID}/templates/settings.html`,\n            height: \"auto\",\n            title: \"Pings and Pointers - Settings\",\n            width: 700,\n            classes: [\"pointer\", \"pointer-settings\"],\n            tabs: [\n                {\n                    navSelector: \".tabs\",\n                    contentSelector: \"form\",\n                    initial: \"name\",\n                },\n            ],\n            submitOnClose: true,\n            submitOnChange: true,\n            closeOnSubmit: false,\n            maxScale: 3,\n            pixiOptions: {\n                width: 300,\n                height: 300,\n                transparent: true,\n                sharedTicker: true,\n                sharedLoader: true,\n            },\n            gridSize: 50,\n        };\n    }\n\n    static get defaultCollection() {\n        return [\n            {\n                name: \"Pointer Hand\",\n                id: \"wztq19uwjl\",\n                scale: 1,\n                angle: 0,\n                offset: {\n                    x: 0.5,\n                    y: 0.5,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 1,\n                animations: {\n                    rotation: {\n                        use: false,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: 0,\n                        max: 180,\n                    },\n                    scale: {\n                        use: false,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: 0.5,\n                        max: 2,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/pointer.svg`,\n            },\n            {\n                name: \"Ping Round\",\n                id: \"gw4tu2ov86\",\n                scale: 1,\n                angle: 0,\n                offset: {\n                    x: 0,\n                    y: 0,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 5,\n                animations: {\n                    rotation: {\n                        use: true,\n                        dur: 5,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: -180,\n                        max: 180,\n                    },\n                    scale: {\n                        use: false,\n                        dur: 2.5,\n                        easing: {\n                            method: \"sine\",\n                            type: \"inOut\",\n                        },\n                        yoyo: true,\n                        min: 1,\n                        max: 1.5,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/focus.svg`,\n                gridSize: 50,\n                default: \"ping\",\n            },\n            {\n                name: \"Ping Arrows\",\n                id: \"6p55sd7xi3\",\n                scale: 1,\n                angle: 0,\n                offset: {\n                    x: 0,\n                    y: 0,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 5,\n                animations: {\n                    rotation: {\n                        use: false,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: 0,\n                        max: 180,\n                    },\n                    scale: {\n                        use: true,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: true,\n                        min: 0.9,\n                        max: 1.3,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/convergence-target.svg`,\n            },\n            {\n                name: \"Ping Triangle\",\n                id: \"eogjz9yjn3\",\n                scale: 1,\n                angle: 0,\n                offset: {\n                    x: 0,\n                    y: -0.1,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 5,\n                animations: {\n                    rotation: {\n                        use: true,\n                        dur: 4,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: -180,\n                        max: 180,\n                    },\n                    scale: {\n                        use: true,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: true,\n                        min: 0.9,\n                        max: 1.3,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/triangle-target.svg`,\n            },\n            {\n                name: \"Pointer Pin\",\n                id: \"dvs2vb9y0y\",\n                scale: 1,\n                angle: -15,\n                offset: {\n                    x: 0.35,\n                    y: -0.6,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 1,\n                animations: {\n                    rotation: {\n                        use: false,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: 0,\n                        max: 180,\n                    },\n                    scale: {\n                        use: true,\n                        dur: 1.5,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: true,\n                        min: 0.9,\n                        max: 1,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/pin.svg`,\n            },\n            {\n                name: \"Pointer Arrow\",\n                id: \"6njoyebxpf\",\n                scale: 1,\n                angle: 0,\n                offset: {\n                    x: 0,\n                    y: -0.5,\n                },\n                tint: {\n                    useUser: true,\n                    color: \"#ffffff\",\n                },\n                pingDuration: 1,\n                animations: {\n                    rotation: {\n                        use: false,\n                        dur: 1,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: false,\n                        min: 0,\n                        max: 180,\n                    },\n                    scale: {\n                        use: true,\n                        dur: 1.5,\n                        easing: {\n                            method: \"none\",\n                            type: \"in\",\n                        },\n                        yoyo: true,\n                        min: 0.9,\n                        max: 1,\n                    },\n                },\n                img: `modules/${CONSTANTS.MODULE_ID}/assets/plain-arrow.svg`,\n            },\n        ];\n    }\n\n    static get defaultSettings() {\n        return {\n            controls: {\n                pointer: {\n                    key: \"X\",\n                },\n                ping: {\n                    key: \"Left Click\",\n                    force: \"Right Click\",\n                    pointerActive: true,\n                },\n            },\n        };\n    }\n\n    activateListeners(html) {\n        super.activateListeners(html);\n        html[0].querySelectorAll(\".pointer-control-chooser\").forEach((e) => this._initControlChooser(e));\n\n        this._initDesigner(html[0].querySelector(\".designer\"));\n\n        const chooser = html[0].querySelector(\".chooser\");\n        chooser.addEventListener(\"click\", (ev) => {\n            let target = ev.target.closest(\".pointer-name\");\n            if (target) {\n                this._onClickName(ev);\n            }\n\n            target = ev.target.closest(\".delete-pointer\");\n            if (target) {\n                const li = target.closest(\"li\");\n                let collection = foundry.utils.duplicate(game.settings.get(CONSTANTS.MODULE_ID, \"collection\"));\n                const pointerData =\n                    li.dataset.pointerId === this.pointer.id ? {} : foundry.utils.duplicate(this.pointer.data);\n                collection = collection.filter((e) => e.id !== li.dataset.pointerId);\n                if (collection.length === 0) collection = foundry.utils.duplicate(this.constructor.defaultCollection);\n                game.settings.set(CONSTANTS.MODULE_ID, \"collection\", collection).then(async (e) => {\n                    await this._render();\n                    this._selectPointer(pointerData);\n                });\n            }\n\n            target = ev.target.closest(\".add-pointer\");\n            if (target) {\n                this._addPointer();\n            }\n        });\n\n        chooser.querySelectorAll(\"input\").forEach((e) =>\n            e.addEventListener(\"change\", async (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n                const target = ev.currentTarget;\n                const list = target.closest(\".chooser\");\n                const checkboxes = Array.from(list.querySelectorAll(`input[name=${target.name}]`)).filter(\n                    (e) => e !== target,\n                );\n                target.checked = true;\n                for (let checkbox of checkboxes) {\n                    checkbox.checked = false;\n                }\n\n                await this._onSubmit(ev);\n                updateCanvas();\n            }),\n        );\n\n        const updateCanvas = () => {\n            const pointerId = this.userData.pointer;\n            const collection = game.settings.get(CONSTANTS.MODULE_ID, \"collection\");\n            const pointerData = collection.find((e) => e.id === pointerId) || collection[0];\n            pointerData.position = new PIXI.Point(this._pixiApp.view.width / 2, this._pixiApp.view.height / 2);\n\n            // Removing last pointer\n            this._pixiApp.stage.removeChild(this._pixiApp.stage.children[2]);\n\n            const pointer = new Pointer(pointerData, game.user.id, this.options.gridSize);\n            this._pixiApp.stage.addChild(pointer);\n        };\n\n        if (!game.user.isGM) {\n            return;\n        }\n        html[0].querySelector(\".pointer-apply-settings\").addEventListener(\"click\", async (ev) => {\n            const settings = this.userData;\n            Logger.debug(\"Flag 'settings' updated :\", settings);\n            for (let user of game.users) {\n                await user.unsetFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS);\n                await user.setFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS, settings);\n            }\n            ui.notifications.info(\"Finished applying settings to all users!\");\n        });\n    }\n\n    async _addPointer() {\n        const idx = Math.floor(Math.random() * PointerSettingsMenu.defaultCollection.length);\n        const pointerData = foundry.utils.duplicate(PointerSettingsMenu.defaultCollection[idx]);\n        pointerData.name = \"New\";\n        pointerData.id = randomID();\n\n        const collection = foundry.utils.duplicate(game.settings.get(CONSTANTS.MODULE_ID, \"collection\"));\n        collection.push(pointerData);\n        await game.settings.set(CONSTANTS.MODULE_ID, \"collection\", collection);\n\n        await this._render(false, {});\n\n        this._selectPointer(pointerData);\n    }\n\n    async _onClickName(ev) {\n        const li = ev.target.closest(\".pointer-selection\");\n        if (this.canConfigure) {\n            await this.pointer.save();\n        }\n        const pointerId = li.dataset.pointerId;\n\n        const collection = game.settings.get(CONSTANTS.MODULE_ID, \"collection\");\n        const pointerData = collection.find((e) => e.id === pointerId);\n        this._selectPointer(pointerData);\n    }\n\n    async _selectPointer(pointerData) {\n        this.pointer.update(pointerData);\n\n        const designer = this.form.querySelector(\".designer\");\n        const flatData = flattenObject(pointerData);\n        Logger.debug(\"Flatdata updated:\", flatData);\n        for (let key of Object.keys(flatData)) {\n            const inp = designer.querySelector(`input[name=\"pointer.${key}\"]`);\n            if (!inp) {\n                continue;\n            }\n            if (inp.type === \"checkbox\") {\n                inp.checked = flatData[key];\n            } else if (inp.type === \"range\") {\n                inp.value = flatData[key];\n                inp.parentNode.querySelector(\".range-value\").innerText = flatData[key];\n            } else {\n                inp.value = flatData[key];\n            }\n        }\n    }\n\n    _initControlChooser(inp) {\n        inp.addEventListener(\"focusout\", (ev) => {\n            this._onSubmit(ev);\n            this._focusedControl = null;\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n\n        inp.addEventListener(\"click\", (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            if (this._focusedControl !== ev.currentTarget) {\n                this._focusedControl = ev.currentTarget;\n                return;\n            }\n            ev.currentTarget.value = this._getMetaKeys(ev) + \"Left Click\";\n        });\n\n        inp.addEventListener(\"contextmenu\", (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            if (this._focusedControl !== ev.currentTarget) {\n                this._focusedControl = ev.currentTarget;\n                return;\n            }\n            ev.currentTarget.value = this._getMetaKeys(ev) + \"Right Click\";\n        });\n\n        inp.addEventListener(\"keydown\", (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            if (this._focusedControl !== ev.currentTarget) {\n                this._focusedControl = ev.currentTarget;\n                return;\n            }\n            let key = getKey(ev);\n            if ([\"Control\", \"Shift\", \"Alt\", \"Meta\"].includes(key)) {\n                ev.currentTarget.value = key;\n                return;\n            }\n            ev.currentTarget.value = this._getMetaKeys(ev) + getKey(ev).toUpperCase();\n        });\n    }\n\n    _getMetaKeys(ev) {\n        let keys = [];\n        if (ev.shiftKey) {\n            keys.push(\"Shift\");\n        }\n        if (ev.ctrlKey) {\n            keys.push(\"Ctrl\");\n        }\n        if (ev.altKey) {\n            keys.push(\"Alt\");\n        }\n        if (ev.metaKey) {\n            keys.push(\"Meta\");\n        }\n        if (keys.length > 0) {\n            return keys.join(\" + \") + \" + \";\n        }\n        return \"\";\n    }\n\n    get canConfigure() {\n        return game.user.can(\"SETTINGS_MODIFY\");\n    }\n\n    get userData() {\n        return foundry.utils.mergeObject(\n            PointerSettingsMenu.defaultSettings,\n            game.user.getFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS) || {},\n        );\n    }\n\n    getData() {\n        let data = super.getData();\n        data = foundry.utils.mergeObject(data, this.userData);\n\n        data.canConfigure = this.canConfigure;\n        // data.pixi = Pointer.defaultSettings;\n        data.easingMethod = {\n            none: \"Linear\",\n            sine: \"Sine\",\n            expo: \"Exponential\",\n            elastic: \"Elastic\",\n            bounce: \"Bounce\",\n        };\n        data.easingType = {\n            in: \"In\",\n            out: \"Out\",\n            inOut: \"In and Out\",\n        };\n\n        data.collection = game.settings.get(CONSTANTS.MODULE_ID, \"collection\");\n        if (data.canConfigure && !data.collection.length) {\n            data.collection = foundry.utils.duplicate(this.constructor.defaultCollection);\n            game.settings.set(CONSTANTS.MODULE_ID, \"collection\", data.collection);\n        }\n\n        const userSettings = this.userData;\n\n        let selectedPointer = data.collection.find((e) => e.id === userSettings.pointer);\n        if (!userSettings.pointer || !selectedPointer) {\n            selectedPointer = data.collection[0];\n            userSettings.pointer = selectedPointer.id;\n        }\n\n        data.collection.forEach((pointer) => {\n            pointer.selectedAsPointer = pointer.id === userSettings.pointer;\n        });\n\n        data.pixi = selectedPointer;\n\n        let selectedPing = data.collection.find((e) => e.id === userSettings.ping);\n        if (!userSettings.ping || !selectedPing) {\n            selectedPing = data.collection[1] || data.collection[0];\n            userSettings.ping = selectedPing.id;\n        }\n\n        data.collection.forEach((ping) => {\n            ping.selectedAsPing = ping.id === userSettings.ping;\n        });\n\n        selectedPing.selectedAsPing = true;\n\n        data.isGM = game.user.isGM;\n        return data;\n    }\n\n    async _updateObject(event, formData) {\n        const data = foundry.utils.expandObject(formData);\n        if (this.canConfigure) {\n            this.pointer.save();\n            data.pointer.img = this.pointer.data.img;\n            const pointer = new Pointer(data.pointer);\n            this.pointer.save(data.pointer);\n        }\n        if (event.currentTarget?.closest(\".designer\")) {\n            return;\n        }\n        let settings = foundry.utils.duplicate(this.userData);\n        settings = foundry.utils.mergeObject(settings, data.user);\n        const chooser = this.form.querySelector(\".chooser\");\n        const pingId = chooser.querySelector('input[name=\"selectedAsPing\"]:checked').closest(\"li\").dataset.pointerId;\n        settings.ping = pingId;\n        const pointerId = chooser.querySelector('input[name=\"selectedAsPointer\"]:checked').closest(\"li\")\n            .dataset.pointerId;\n        settings.pointer = pointerId;\n\n        await game.user.setFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS, settings);\n        this.render();\n    }\n\n    /** PIXI STUFF */\n\n    _initDesigner(container) {\n        container.querySelectorAll(\"input, select\").forEach((el) => {\n            el.addEventListener(\"input\", this._designerInputChange.bind(this));\n            // el.addEventListener('change', ev => this.pointer.save());\n            el.addEventListener(\"wheel\", (ev) => {\n                ev.stopPropagation();\n                ev.preventDefault();\n            });\n        });\n        if (this._pixiApp) {\n            container.querySelector(\".canvas-container\").appendChild(this._pixiApp.view);\n            return;\n        }\n        const { stage } = this._initPixiApp(container);\n\n        this._pixiApp.view.addEventListener(\"click\", (ev) => {\n            new FilePicker({\n                type: \"imagevideo\",\n                current: this.pointer.img || \"\",\n                callback: (path) => {\n                    this.pointer.update({ img: path });\n                },\n                top: this.position.top + 40,\n                left: this.position.left + 10,\n            }).browse(this.pointer.img);\n        });\n        const pointerId = this.userData.pointer;\n        const collection = game.settings.get(CONSTANTS.MODULE_ID, \"collection\");\n        const pointerData = collection.find((e) => e.id === pointerId) || collection[0];\n        pointerData.position = new PIXI.Point(this._pixiApp.view.width / 2, this._pixiApp.view.height / 2);\n\n        this.pointer = stage.addChild(new Pointer(pointerData, game.user.id, this.options.gridSize));\n    }\n\n    _designerInputChange(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        let udata = {};\n        const val =\n            ev.currentTarget.type === \"range\"\n                ? Number(ev.currentTarget.value)\n                : ev.currentTarget.type === \"checkbox\"\n                  ? !!ev.currentTarget.checked\n                  : ev.currentTarget.value;\n\n        if (ev.currentTarget.type === \"range\") {\n            const rangevalue = ev.currentTarget.parentNode.querySelector(\".range-value\");\n            rangevalue.innerText = ev.currentTarget.value;\n        }\n        const prop = ev.currentTarget.name.split(\".\").slice(1).join(\".\");\n        udata[prop] = val;\n        this.pointer.update(udata).then(async () => {\n            if (prop === \"name\") {\n                const pointerData = this.pointer.data;\n                await this.render();\n                this._selectPointer(pointerData);\n            }\n\n            // Update only the pointer object with the changes\n            const collection = game.settings.get(CONSTANTS.MODULE_ID, \"collection\");\n            const pointerId = this.userData.pointer;\n            const pointerData = collection.find((e) => e.id === pointerId);\n            pointerData[prop] = val; // Apply the changes to the pointer data\n        });\n    }\n\n    _initPixiApp(container) {\n        const pixiOptions = this.options.pixiOptions;\n\n        const app = new PIXI.Application(pixiOptions);\n        this._pixiApp = app;\n        container.querySelector(\".canvas-container\").appendChild(app.view);\n        app.view.style.cursor = \"pointer\";\n        const stage = app.stage;\n        const grid = app.stage.addChild(new PIXI.Graphics());\n        this.grid = grid;\n        const gridColor = document.body.classList.contains(\"dark-mode\") ? 0xaaaaaa : 0x666666;\n        const gridSize = this.options.gridSize;\n        grid.lineStyle(3, gridColor, 0.8);\n        const gridLength = 20 * gridSize;\n        for (let x = 0; x <= gridLength; x += gridSize) {\n            for (let y = 0; y <= gridLength; y += gridSize) {\n                grid.moveTo(x, 0).lineTo(x, gridLength).moveTo(0, y).lineTo(gridLength, y);\n            }\n        }\n        grid.position = new PIXI.Point(pixiOptions.width * 0.5, pixiOptions.height * 0.5);\n        grid.pivot = new PIXI.Point(gridLength * 0.5, gridLength * 0.5);\n        const target = app.stage.addChild(new PIXI.Graphics());\n        target.lineStyle(5, 0xcc0000, 1.0);\n        const targetSize = gridSize * 0.25;\n        const x = pixiOptions.width * 0.5,\n            y = pixiOptions.height * 0.5;\n        target\n            .moveTo(x - targetSize, y - targetSize)\n            .lineTo(x + targetSize, y + targetSize)\n            .moveTo(x - targetSize, y + targetSize)\n            .lineTo(x + targetSize, y - targetSize);\n\n        return {\n            stage,\n        };\n    }\n}\n","import CONSTANTS from \"./constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport { PointerSettingsMenu } from \"./settings/settings-menu.js\";\nexport const registerSettings = function () {\n    game.settings.register(CONSTANTS.MODULE_ID, \"default\", {\n        name: \"Activate placeables changes.\",\n        hint: \"Changes some behaviours of placeables, like preview snapping to grid. Reload for all connected clients is required for this to take effect if changed!\",\n        scope: \"world\",\n        config: false,\n        default: PointerSettingsMenu.defaultSettings,\n        type: Object,\n    });\n\n    game.settings.registerMenu(CONSTANTS.MODULE_ID, \"design-studio\", {\n        name: game.i18n.localize(\"POINTER.Settings.Name\"),\n        label: game.i18n.localize(\"POINTER.Settings.Button\"),\n        icon: \"fas fa-paint-roller\",\n        type: PointerSettingsMenu,\n        restricted: false,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"collection\", {\n        name: \"Collection of all pings and pointers\",\n        config: false,\n        restricted: false,\n        scope: \"world\",\n        type: Object,\n        default: PointerSettingsMenu.defaultCollection,\n        onChange: (data) => {\n            canvas.controls.pointer.updateAll();\n        },\n    });\n\n    // game.settings.register(CONSTANTS.MODULE_ID, 'version', {\n    // \tname: \"Pointer Version\",\n    // \tscope: \"world\",\n    // \tconfig: false,\n    // \tdefault: \"0\",\n    // \ttype: String\n    // });\n    // if (game.user.isGM) {\n    // \tconst version = game.settings.get(CONSTANTS.MODULE_ID, 'version');\n    // \t// only do this once after upgrading to 2.0.0\n    // \tif (foundry.utils.isNewerVersion(\"2.0.0\", version)) {\n    // \t\tnew (PointerSettingsMenu)().render(true);\n    // \t}\n    // \t// Update version to newest mod version - every time\n    // \tif (foundry.utils.isNewerVersion(game.modules.get(CONSTANTS.MODULE_ID).version, version)) {\n    // \t\tgame.settings.set(CONSTANTS.MODULE_ID, 'version', game.modules.get(CONSTANTS.MODULE_ID).version);\n    // \t}\n    // }\n\n    // ========================================================================\n    game.settings.register(CONSTANTS.MODULE_ID, \"debug\", {\n        name: `${CONSTANTS.MODULE_ID}.setting.debug.name`,\n        hint: `${CONSTANTS.MODULE_ID}.setting.debug.hint`,\n        scope: \"client\",\n        config: true,\n        default: false,\n        type: Boolean,\n    });\n};\nclass ResetSettingsDialog extends FormApplication {\n    constructor(...args) {\n        super(...args);\n\n        return new Dialog({\n            title: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.title`),\n            content:\n                '<p style=\"margin-bottom:1rem;\">' +\n                game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.content`) +\n                \"</p>\",\n            buttons: {\n                confirm: {\n                    icon: '<i class=\"fas fa-check\"></i>',\n                    label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.confirm`),\n                    callback: async () => {\n                        const worldSettings = game.settings.storage\n                            ?.get(\"world\")\n                            ?.filter((setting) => setting.key.startsWith(`${CONSTANTS.MODULE_ID}.`));\n                        for (let setting of worldSettings) {\n                            Logger.log(`Reset setting '${setting.key}'`);\n                            await setting.delete();\n                        }\n                        //window.location.reload();\n                    },\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.cancel`),\n                },\n            },\n            default: \"cancel\",\n        });\n    }\n    async _updateObject(event, formData) {\n        // do nothing\n    }\n}\n","import { Pointer, Ping } from \"./pointer.js\";\n//@ts-expect-error\n// import { TweenMax } from \"../../../../scripts/greensock/esm/all.js\";\nimport { PointerSettingsMenu } from \"../settings/settings-menu.js\";\nimport CONSTANTS from \"../constants.js\";\n\nexport class PointerContainer extends PIXI.Container {\n    constructor() {\n        super();\n        this.initUsers();\n\n        this._socket = \"module.pointer\";\n        this._onMouseMove = (ev) => this._mouseMove(ev);\n    }\n\n    get deltaTime() {\n        return 1000 / 30;\n    }\n\n    static init() {\n        // called inside the ready hook, so settings are registered.\n        // ready hook *always* is supposed to come after the canvasReady hook\n        if (canvas.scene) canvas.controls.pointer = canvas.controls.addChild(new PointerContainer());\n\n        // window.addEventListener('mousemove', PointerContainer.trackMousePos);\n        game.socket.on(\"module.pointer\", PointerContainer.socketHandler);\n        // but ready comes only during initialization\n        // so we need to take care of future scene changes (or other reasons for canvas rerenders)\n        Hooks.on(\"canvasReady\", () => {\n            if (canvas.controls.pointer) canvas.controls.pointer.destroy({ chidren: true });\n\n            canvas.controls.pointer = canvas.controls.addChild(new PointerContainer());\n        });\n    }\n\n    async initUsers() {\n        this._users = {};\n        for (let user of game.users) {\n            const data = this._getUserPointerData(user);\n            const pointer = this.addChild(new Pointer(data.pointer, user.id));\n            const ping = this.addChild(new Ping(data.ping, user.id));\n            ping.hide();\n            pointer.hide();\n            this._users[user.id] = { pointer, ping };\n        }\n    }\n\n    _getUserPointerData(user) {\n        const collection =\n            game.settings.get(CONSTANTS.MODULE_ID, \"collection\") || PointerSettingsMenu.defaultCollection;\n        const settings = foundry.utils.mergeObject(\n            PointerSettingsMenu.defaultSettings,\n            user.getFlag(CONSTANTS.MODULE_ID, CONSTANTS.FLAGS.SETTINGS),\n        );\n        const pointerData = collection.find((e) => e.id === settings.pointer) || collection[0];\n        const pingData = collection.find((e) => e.id === settings.ping) || collection[1] || collection[0];\n        return { pointer: pointerData, ping: pingData };\n    }\n\n    update(user) {\n        const data = this._getUserPointerData(user);\n        if (!data.pointer || !data.ping) {\n            return;\n        }\n        this._users[user.id].pointer.update(data.pointer);\n        this._users[user.id].ping.update(data.ping);\n    }\n\n    updateAll() {\n        for (let user of game.users) {\n            this.update(user);\n        }\n    }\n\n    updateUserColor(user) {\n        const pointer = this._users[user.id].pointer;\n        pointer.update({ tint: pointer.tint });\n        const ping = this._users[user.id].ping;\n        ping.update({ tint: ping.tint });\n    }\n\n    getMouseWorldCoord() {\n        // return canvas.app.renderer.plugins.interaction.mouse.getLocalPosition(canvas.stage);\n\n        // TODO is really ok ?\n        // if (foundry.utils.isNewerVersion(game.version, 11)) {\n        //   return canvas.mousePosition;\n        // }\n\n        if (canvas.app.renderer.events) {\n            // PixiJS 7 (Foundry VTT 11)\n            return canvas.app.renderer.events.pointer.getLocalPosition(canvas.stage);\n        }\n\n        return canvas.app.renderer.plugins.interaction.mouse.getLocalPosition(canvas.stage);\n    }\n\n    ping({\n        userId = game.user.id,\n        position = this.getMouseWorldCoord(),\n        force = false,\n        scale = canvas.stage.scale.x,\n    } = {}) {\n        const ping = this._users[userId].ping;\n        ping.update({ position });\n\n        if (force) {\n            canvas.animatePan({ x: position.x, y: position.y, scale: scale });\n        }\n\n        if (userId !== game.user.id) return;\n\n        const data = {\n            senderId: userId,\n            position: position,\n            sceneId: canvas.scene.id,\n            type: \"ping\",\n            force: force,\n            scale: canvas.stage.scale.x,\n        };\n        game.socket.emit(this._socket, data);\n    }\n\n    destroy(options) {\n        super.destroy(options);\n    }\n\n    static socketHandler(data) {\n        if (data.stop) {\n            canvas.controls.pointer.hidePointer(data.senderId);\n            return;\n        } else if (data.sceneId !== canvas.scene.id) {\n            return;\n        } else if (data.type === \"pointer\") {\n            canvas.controls.pointer.movePointer(data.senderId, data.position);\n        } else if (data.type === \"ping\")\n            canvas.controls.pointer.ping({\n                userId: data.senderId,\n                position: data.position,\n                force: data.force,\n                scale: data.scale,\n            });\n    }\n\n    movePointer(userId, { x, y }) {\n        const pointer = this._users[userId].pointer;\n        if (pointer.renderable) {\n            // only animate if already visible\n            TweenMax.to(pointer.position, this.deltaTime / 1000, { x, y });\n        } else {\n            pointer.renderable = true;\n            this._users[userId].pointer.update({ position: { x, y } });\n        }\n    }\n\n    hidePointer(userId) {\n        const pointer = this._users[userId].pointer;\n        pointer.hide();\n    }\n\n    start() {\n        this.lastTime = 0;\n        this._mouseMove();\n        window.addEventListener(\"mousemove\", this._onMouseMove);\n        this._users[game.user.id].pointer.renderable = true;\n    }\n\n    stop() {\n        window.removeEventListener(\"mousemove\", this._onMouseMove);\n        this._users[game.user.id].pointer.renderable = false;\n        const data = {\n            senderId: game.user.id,\n            stop: true,\n        };\n        game.socket.emit(this._socket, data);\n    }\n\n    _mouseMove(ev) {\n        const { x, y } = this.getMouseWorldCoord();\n        this._users[game.user.id].pointer.update({ position: { x, y } });\n\n        const dt = Date.now() - this.lastTime;\n        if (dt < this.deltaTime)\n            // 30 times per second\n            return;\n\n        this.lastTime = Date.now();\n        let mdata = {\n            senderId: game.user.id,\n            position: { x, y },\n            sceneId: canvas.scene.id,\n            type: \"pointer\",\n        };\n        game.socket.emit(this._socket, mdata);\n    }\n\n    destroy(...args) {\n        super.destroy(...args);\n        this.stop();\n    }\n}\n","import CONSTANTS from \"./constants.js\";\nimport { PointerContainer } from \"./pixi/container.js\";\nimport initControls from \"./keybindings.js\";\n\nexport const initHooks = async () => {};\n\nexport const setupHooks = async () => {\n    // setApi(API);\n};\n\nexport const readyHooks = () => {\n    loadTemplates([`modules/${CONSTANTS.MODULE_ID}/templates/designer.html`]);\n\n    Hooks.on(\"updateUser\", (entity, udata) => {\n        if (udata.color) {\n            canvas.controls.pointer.updateUserColor(entity);\n        }\n        if (udata.flags?.pointer?.settings) {\n            canvas.controls.pointer.update(entity);\n        }\n        if (udata.flags?.pointer?.settings?.controls && entity.id === game.user.id) {\n            initControls();\n        }\n    });\n\n    PointerContainer.init();\n    initControls();\n    Hooks.on(\"canvasReady\", () => {\n        initControls();\n    });\n};\n","/**\n * This is your TypeScript entry file for Foundry VTT.\n * Register custom settings, sheets, and constants using the Foundry API.\n * Change this heading to be more descriptive to your module, or remove it.\n * Author: [your name]\n * Content License: [copyright and-or license] If using an existing system\n * \t\t\t\t\tyou may want to put a (link to a) license or copyright\n * \t\t\t\t\tnotice here (e.g. the OGL).\n * Software License: [your license] Put your desired license here, which\n * \t\t\t\t\t determines how others may use and modify your module\n */\n// Import JavaScript modules\n\n// Import TypeScript modules\nimport { registerSettings } from \"./scripts/settings.js\";\nimport { initHooks, readyHooks, setupHooks } from \"./scripts/main.js\";\nimport CONSTANTS from \"./scripts/constants.js\";\nimport API from \"./scripts/api.js\";\n\n/* ------------------------------------ */\n/* Initialize module\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"init\", async () => {\n    // Logger.log(`${CONSTANTS.MODULE_ID} | Initializing ${CONSTANTS.MODULE_ID}`);\n\n    // Register custom module settings\n    registerSettings();\n    initHooks();\n\n    // Preload Handlebars templates\n    //await preloadTemplates();\n});\n\n/* ------------------------------------ */\n/* Setup module\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"setup\", function () {\n    // Do anything after initialization but before ready\n    setupHooks();\n});\n\n/* ------------------------------------ */\n/* When ready\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"ready\", async () => {\n    // Do anything once the module is ready\n    // if (!game.modules.get('lib-wrapper')?.active && game.user?.isGM) {\n    //   let word = 'install and activate';\n    //   if (game.modules.get('lib-wrapper')) word = 'activate';\n    //   throw error(`Requires the 'libWrapper' module. Please ${word} it.`);\n    // }\n    // if (!game.modules.get('socketLib')?.active && game.user?.isGM) {\n    //   let word = 'install and activate';\n    //   if (game.modules.get('socketLib')) word = 'activate';\n    //   throw error(`Requires the 'socketLib' module. Please ${word} it.`);\n    // }\n    readyHooks();\n});\n\n/* ------------------------------------ */\n/* Other Hooks\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\n\nHooks.once(\"devModeReady\", ({ registerPackageDebugFlag }) => {\n    registerPackageDebugFlag(CONSTANTS.MODULE_ID);\n});\n"],"names":["key","e","pointerData","x","y","initControls"],"mappings":"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"}