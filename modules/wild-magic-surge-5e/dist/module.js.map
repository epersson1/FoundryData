{
  "version": 3,
  "sources": ["../scripts/WMSCONST.ts", "../scripts/utils/CallHooks.ts", "../scripts/Chat.ts", "../scripts/TidesOfChaos.ts", "../scripts/Logger.ts", "../scripts/RollTableMagicSurge.ts", "../scripts/utils/Resource.ts", "../scripts/utils/IncrementalCheck.ts", "../scripts/utils/SpellLevelTrigger.ts", "../scripts/utils/DieDescending.ts", "../scripts/AutoEffects.ts", "../scripts/utils/SpellParser.ts", "../scripts/utils/SurgeDetails.ts", "../scripts/TriggerMacro.ts", "../scripts/MagicSurgeCheck.ts", "../scripts/RoundCheck.ts", "../scripts/panels/Helpers.ts", "../scripts/panels/ChatSettingsPanel.ts", "../scripts/panels/IncrementalSettingsPanel.ts", "../scripts/panels/SpellLevelSettingsPanel.ts", "../scripts/panels/StandardSettingsPanel.ts", "../scripts/panels/SpellRegexSettingsPanel.ts", "../scripts/ModuleSettings.ts", "../scripts/panels/ActorHelperPanel.ts", "../scripts/module.ts"],
  "sourcesContent": ["export const WMSCONST = {\n  MODULE_NAME: \"Wild Magic Surge 5e\",\n  MODULE_ID: \"wild-magic-surge-5e\",\n  OPT_WMS_NAME: \"wmsName\",\n  OPT_TOC_NAME: \"tocName\",\n  OPT_POWM_NAME: \"powmName\",\n\n  OPT_WHISPER_GM: \"whisperToGM\",\n  OPT_WHISPER_GM_ROLL_CHAT: \"whisperToGMRollChat\",\n\n  OPT_TRIGGERMACRO_ENABLE: \"enableTriggerMacro\",\n  OPT_TRIGGERMACRO_NAME: \"triggerMacroName\",\n  OPT_ROLLTABLE_ENABLE: \"enableRollTable\",\n  OPT_ROLLTABLE_NAME: \"rollTableName\",\n  OPT_POWM_ROLLTABLE_NAME: \"powmRollTableName\",\n\n  ROLLTABLE_TYPE: {\n    DEFAULT: \"None\",\n    AUTO: \"Auto Roll Table\",\n    PLAYER_TRIGGER: \"Player Trigger Roll\",\n  },\n\n  OPT_ENABLE_TOC: \"enableTidesOfChaosRecharge\",\n\n  OPT_AUTO_D20: \"autoRollD20\",\n  OPT_CHAT_MSG: \"magicSurgeChatMessage\",\n  OPT_CHAT_MSG_ENABLED: \"magicSurgeChatMessageEnabled\",\n  OPT_AUTO_D20_MSG: \"autoRollD20Message\",\n  OPT_AUTO_D20_MSG_ENABLED: \"autoRollD20MessageEnabled\",\n  OPT_AUTO_D20_MSG_NO_SURGE: \"autoRollD20MessageNoSurge\",\n  OPT_AUTO_D20_MSG_NO_SURGE_ENABLED: \"autoRollD20MessageNoSurgeEnabled\",\n\n  OPT_CUSTOM_ROLL_DICE_FORMULA: \"customRollDiceFormula\",\n  OPT_CUSTOM_ROLL_RESULT: \"customRollResult\",\n  OPT_CUSTOM_ROLL_RESULT_CHECK: \"customRollResultCheck\",\n\n  OPT_INCREMENTAL_CHECK_TO_CHAT: \"incrementalCheckToChat\",\n\n  OPT_ENABLE_NPCS: \"enableNpcTracking\",\n\n  OPT_TSL_DIE: \"OPT_TSL_DIE\",\n  OPT_TSL_CANTRIP: \"OPT_TSL_CANTRIP\",\n  OPT_TSL_LVL1: \"OPT_TSL_LVL1\",\n  OPT_TSL_LVL2: \"OPT_TSL_LVL2\",\n  OPT_TSL_LVL3: \"OPT_TSL_LVL3\",\n  OPT_TSL_LVL4: \"OPT_TSL_LVL4\",\n  OPT_TSL_LVL5: \"OPT_TSL_LVL5\",\n  OPT_TSL_LVL6: \"OPT_TSL_LVL6\",\n  OPT_TSL_LVL7: \"OPT_TSL_LVL7\",\n  OPT_TSL_LVL8: \"OPT_TSL_LVL8\",\n  OPT_TSL_LVL9: \"OPT_TSL_LVL9\",\n  OPT_TSL_LVL10: \"OPT_TSL_LVL10\",\n\n  CHAT_TYPE: {\n    DEFAULT: \"DEFAULT\",\n    ROLL: \"ROLL\",\n    TABLE: \"TABLE\",\n  },\n\n  ROLL_CHECK_TYPE: {\n    DEFAULT: \"DEFAULT\",\n    SPELL_LEVEL_DEPENDENT_ROLL: \"SPELL_LEVEL_DEPENDENT_ROLL\",\n    INCREMENTAL_CHECK: \"INCREMENTAL_CHECK\",\n    INCREMENTAL_CHECK_CHAOTIC: \"INCREMENTAL_CHECK_CHAOTIC\",\n    DIE_DESCENDING: \"DIE_DESCENDING\",\n  },\n\n  SURGE_FEAT_TYPE: {\n    WildMagicSurge: \"WMS\",\n    PathOfWildMagic: \"POWM\",\n    TidesOfChaosSurge: \"TOCSURGE\",\n  },\n\n  RESOURCE_TYPE: {\n    NONE: \"None\",\n    PRIMARY: \"Primary\",\n    SECONDARY: \"Secondary\",\n    TERTIARY: \"Tertiary\",\n  },\n  OPT_RESOURCE_TYPE: \"OPT_RESOURCE_TYPE\",\n\n  SURGE_TYPE: {\n    DEFAULT: \"Standard\",\n    SPELL_LEVEL_DEPENDENT_ROLL: \"Spell Level Dependent Rolls\",\n    INCREMENTAL_CHECK: \"Incremental Check\",\n    INCREMENTAL_CHECK_CHAOTIC: \"Incremental Check (Chaotic)\",\n    DIE_DESCENDING: \"Descending Dice\",\n  },\n  OPT_SURGE_TYPE: \"OPT_SURGE_TYPE\",\n\n  MODULE_FLAG_NAME: \"wild-magic-surge-5e\",\n  DIE_DESCENDING_FLAG_OPTION: \"die_type\",\n  HAS_SURGED_FLAG_OPTION: \"hassurged\",\n\n  ROLL_COMPARISON: {\n    EQ: \"=\",\n    GT: \">\",\n    LT: \"<\",\n  },\n\n  SPELL_LIST_KEY_WORDS: [\n    \"Cantrip\",\n    \"1st Level\",\n    \"2nd Level\",\n    \"3rd Level\",\n    \"4th Level\",\n    \"5th Level\",\n    \"6th Level\",\n    \"7th Level\",\n    \"8th Level\",\n    \"9th Level\",\n    \"10th Level\",\n  ],\n\n  OPT_SPELL_REGEX: \"spellRegex\",\n  OPT_SPELL_REGEX_INVERSE: \"spellRegexInverse\",\n  OPT_SPELL_REGEX_ENABLED: \"spellRegexEnabled\",\n\n  OPT_SURGE_TOC_ENABLED: \"surgeTocEnabled\",\n  OPT_EFFECTS_ENABLED: \"wildMagicSurgeEffectsEnabled\",\n  OPT_CANTRIP_SURGE_ENABLED: \"cantripTriggerSurgeCheckEnabled\",\n  OPT_MINIMUM_SPELL_LEVEL_TRIGGER: \"minimumSpellLevelTrigger\",\n  OPT_ENCOUNTER_STATS_ENABLED: \"encounterStatsEnabled\",\n  OPT_SHOW_WMS_DEBUG_OPTION: \"showWMSDebugOption\",\n\n  COMPARISON: {\n    EQ: \"EQ\",\n    GT: \"GT\",\n    LT: \"LT\",\n  },\n\n  DIE_VALUE: {\n    D20: \"1d20\",\n    D12: \"1d12\",\n    D10: \"1d10\",\n    D8: \"1d8\",\n    D6: \"1d6\",\n    D4: \"1d4\",\n  },\n\n  SPELL_LEVELS: {\n    Cantrip: \"Cantrip\",\n    LEVEL_1: \"1st Level\",\n    LEVEL_2: \"2nd Level\",\n    LEVEL_3: \"3rd Level\",\n    LEVEL_4: \"4th Level\",\n    LEVEL_5: \"5th Level\",\n    LEVEL_6: \"6th Level\",\n    LEVEL_7: \"7th Level\",\n    LEVEL_8: \"8th Level\",\n    LEVEL_9: \"9th Level\",\n    LEVEL_10: \"10th Level\",\n  },\n} as const;\n", "export default class CallHooks {\n  /**\n   * @param hookName - The name of the hook to trigger\n   * @param value - The value to send to the Hook\n   * @return {void}\n   */\n  static Call(hookName: string, value: HookValue | HookSurgeValue): void {\n    Hooks.callAll(`wild-magic-surge-5e.${hookName}`, value);\n  }\n}\n", "import { WMSCONST } from \"./WMSCONST\";\nimport CallHooks from \"./utils/CallHooks\";\n\n/**\n * Chat class for handling common chat methods\n * @class Chat\n */\nexport default class Chat {\n  /**\n   * Sends the correct ChatMessage to the Chat window\n   * @public\n   * @return {Promise<void>}\n   * @param type - The type of roll to be sent.\n   * @param message - The chat message to send.\n   * @param rollObject - Roll to send.\n   * @param rollTable - Optional RollTable to send.\n   */\n  static async Send(\n    type: string,\n    message: string,\n    rollObject?: Roll,\n    rollTable?: RollTable,\n  ): Promise<void> {\n    const isWhisperRollResultGM = await game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WHISPER_GM}`,\n    );\n    const isWhisperAutoRollTableGM = await game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WHISPER_GM_ROLL_CHAT}`,\n    );\n\n    const gmsToWhisper = ChatMessage.getWhisperRecipients(\"GM\").map(\n      (u: User) => u.id,\n    );\n\n    let chatData: ChatMessage;\n\n    switch (type) {\n      case WMSCONST.CHAT_TYPE.ROLL:\n        if (!rollObject) return;\n        chatData = await this.createRollChat(\n          message,\n          rollObject,\n          isWhisperRollResultGM,\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n          ) === \"PLAYER_TRIGGER\",\n        );\n        break;\n      case WMSCONST.CHAT_TYPE.TABLE:\n        if (!rollObject || !rollTable) return;\n        chatData = await this.createRollTable(rollObject, rollTable);\n        break;\n      default:\n        chatData = await this.createDefaultChat(message);\n        break;\n    }\n\n    if (\n      (isWhisperRollResultGM && type === WMSCONST.CHAT_TYPE.ROLL) ||\n      (isWhisperRollResultGM && type === WMSCONST.CHAT_TYPE.DEFAULT) ||\n      (isWhisperAutoRollTableGM && type === WMSCONST.CHAT_TYPE.TABLE)\n    ) {\n      chatData = this.setChatToWhisper(chatData, gmsToWhisper);\n    }\n    chatData.speaker = gmsToWhisper;\n\n    ChatMessage.create(chatData);\n  }\n\n  static setChatToWhisper(\n    chatData: ChatMessage,\n    gmsToWhisper: Array<string | null>,\n  ) {\n    chatData.whisper = gmsToWhisper;\n    chatData.blind = true;\n\n    return chatData;\n  }\n\n  /**\n   * Creates a basic HTML string message\n   * @return {Promise<ChatMessage>} The chatData object\n   * @param message - The chat message to send.\n   */\n  static async createDefaultChat(message: string): Promise<ChatMessage> {\n    return <ChatMessage>{\n      content: `<div>${message}</div>`,\n    };\n  }\n\n  /**\n   * Creates a HTML string message with a Roll result and whether to whisper to the GM or not\n   * @return {Promise<ChatMessage>} The chatData object\n   * @param message - The chat message to send.\n   * @param roll - The Roll to parse for the message.\n   * @param isWhisperGM - Should the roll only whisper the GM.\n   */\n  static async createRollChat(\n    message: string,\n    roll: Roll,\n    isWhisperGM: boolean,\n    isRollOnTableButton = false,\n  ): Promise<ChatMessage> {\n    if (isWhisperGM) {\n      return <ChatMessage>{\n        content: `<div>${message} (${roll.total ?? 0})</div>`,\n      };\n    } else {\n      const wildMagicSurgeName = await game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_WMS_NAME}`,\n      );\n      return <ChatMessage>{\n        flavor: `${wildMagicSurgeName} Check - ${message}`,\n        roll: roll,\n        rollMode: isRollOnTableButton\n          ? \"publicroll\"\n          : await game.settings.get(\"core\", \"rollMode\"),\n      };\n    }\n  }\n\n  /**\n   * Creates a HTML string message based on a RollTable\n   * @return {Promise<ChatMessage>} The chatData object\n   * @param {RollResult} rollResult The result of a Roll.\n   * @param {RollTable} surgeRollTable The Roll Table to use.\n   */\n  static async createRollTable(\n    rollResult: Roll,\n    surgeRollTable: RollTable,\n  ): Promise<ChatMessage> {\n    const results = rollResult.results;\n    const roll = rollResult.roll;\n\n    const nr = results.length > 1 ? `${results.length} results` : \"a result\";\n\n    const chatData = <ChatMessage>{\n      flavor: `Draws ${nr} from the <WILD MAGIC SURGE> table.`,\n      user: game.user.id,\n      rolls: [roll],\n      sound: null,\n    };\n\n    chatData.content = await this.createTemplate(\n      CONFIG.RollTable.resultTemplate,\n      surgeRollTable,\n      roll,\n      results,\n    );\n    return chatData;\n  }\n\n  /**\n   * Based on the RollTable template, generates the appropriate HTML to display in chat\n   * @return {Promise<string>} A rendered HTML string.\n   * @param {string} template The foundry template to use for the message.\n   * @param {RollTable} surgeRollTable The Roll Table to use.\n   * @param {Roll} roll The result of a Roll.\n   * @param {Array} results An Array of results from the roll.\n   */\n  static async createTemplate(\n    template: string,\n    surgeRollTable: RollTable,\n    roll: Roll,\n    results: string[],\n  ): Promise<string> {\n    return renderTemplate(template, {\n      description: await TextEditor.enrichHTML(surgeRollTable.description, {\n        entities: true,\n        async: true,\n      }),\n      results: results.map((r: TableResult) => {\n        r.text = r.getChatText();\n        return r;\n      }),\n      rollHTML: await roll.render(),\n      table: surgeRollTable,\n    });\n  }\n\n  /**\n   * Sends the default Wild Magic Surge Check chat message\n   * @return {Promise<void>} The chatData object\n   */\n  static async RunMessageCheck(): Promise<void> {\n    CallHooks.Call(\"CheckForSurge\", { value: true });\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_CHAT_MSG_ENABLED}`,\n      )\n    ) {\n      await this.Send(\n        WMSCONST.CHAT_TYPE.DEFAULT,\n        game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_CHAT_MSG}`),\n      );\n    }\n  }\n}\n", "import { WMSCONST } from \"./WMSCONST\";\n\n/**\n * Controls the Tides of Chaos feat\n * @class TidesOfChaos\n * @example\n * let tidesOfChaos = new TidesOfChaos();\n */\nclass TidesOfChaos {\n  /**\n   * Checks to see if Tides of Chaos has been used and if so recharge it\n   * @return {Promise<void>}\n   * @param actor - The Foundry Actor.\n   */\n  static async Check(actor: Actor): Promise<void> {\n    if (\n      !game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_ENABLE_TOC}`)\n    ) {\n      return;\n    }\n    const tidesItemData = await this.getTidesOfChaosResource(actor);\n\n    if (tidesItemData === undefined) return;\n\n    const updates = [];\n    updates.push({\n      _id: tidesItemData.id,\n      \"system.uses.value\": 1,\n      \"system.recharge.charged\": true,\n    });\n\n    await actor.updateEmbeddedDocuments(\"Item\", updates);\n    await actor.update({ data: { [`${tidesItemData.resourceName}`]: 1 } });\n  }\n\n  /**\n   * Checks to see if Tides of Chaos has been used\n   * @public\n   * @return {Promise<boolean>}\n   * @param actor - The Foundry Actor.\n   */\n  static async IsTidesOfChaosUsed(actor: Actor): Promise<boolean> {\n    const tidesItemData = await this.getTidesOfChaosResource(actor);\n\n    if (tidesItemData === undefined) return false;\n\n    return tidesItemData.usesLeft === 0;\n  }\n\n  /**\n   * Returns whether Tides of Chaos is setup correctly.\n   * @return {Promise<TidesItemData>}\n   * @param actor - The Foundry Actor.\n   */\n  static async IsTidesOfChaosSetup(actor: Actor): Promise<TidesItemData> {\n    let tidesItem = false;\n    const featName = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TOC_NAME}`,\n    );\n    const tidesOfChaosResourceSetup = await this.getTidesOfChaosResource(actor);\n    const hasTidesOfChaosResource =\n      tidesOfChaosResourceSetup === undefined ? false : true;\n\n    if (hasTidesOfChaosResource && tidesOfChaosResourceSetup) {\n      const resourceName = tidesOfChaosResourceSetup.resourceName.split(\".\");\n      if (resourceName.length === 3) {\n        tidesItem = actor.system.resources[resourceName[1]].label === featName;\n      }\n    }\n\n    return <TidesItemData>{\n      hasTidesOfChaosResource: tidesItem,\n      hasTidesOfChaosFeat: hasTidesOfChaosResource,\n      isValid: hasTidesOfChaosResource && tidesItem,\n    };\n  }\n\n  /**\n   * Fetches the actors Tides of Chaos data. If not available, returns undefined.\n   * @return {Promise<TidesItemData>}\n   * @param actor - The Foundry Actor.\n   */\n  static async getTidesOfChaosResource(actor: Actor) {\n    const featName = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TOC_NAME}`,\n    );\n    const item = actor.items.find(\n      (a: Item) => a.name === featName && a.type === \"feat\",\n    );\n\n    if (item === undefined) {\n      // If not enabled or exists then return false indicating not used.\n      return undefined;\n    }\n\n    if (!item?.system?.consume?.target) {\n      // If not enabled or exists then return false indicating not used.\n      return undefined;\n    }\n\n    return {\n      usesLeft: item.system.uses.value,\n      id: item.id,\n      resourceName: item?.system?.consume?.target,\n    };\n  }\n}\n\nexport default TidesOfChaos;\n", "class Logger {\n  public static log(\n    description: string,\n    module = \"global\",\n    data: unknown = {},\n  ): void {\n    console.log(\"Wild Magic Surge\", module, description, data);\n  }\n\n  public static debug(\n    description: string,\n    module = \"global\",\n    data: unknown = {},\n  ): void {\n    console.debug(\"Wild Magic Surge\", module, description, data);\n  }\n\n  public static warn(\n    description: string,\n    module = \"global\",\n    data: unknown = {},\n  ): void {\n    console.warn(\"Wild Magic Surge\", module, description, data);\n  }\n\n  public static error(\n    description: string,\n    module = \"global\",\n    data: unknown = {},\n  ): void {\n    console.error(\"Wild Magic Surge\", module, description, data);\n  }\n}\n\nexport default Logger;\n", "import { WMSCONST } from \"./WMSCONST\";\nimport Chat from \"./Chat\";\nimport Logger from \"./Logger\";\n\n/**\n * Finds, rolls and sends to chat the correct RollTable based on Surge Type and custom table name settings\n * @class RollTableMagicSurge\n */\nclass RollTableMagicSurge {\n  /**\n   * Checks and rolls on the correct table\n   * @public\n   * @return {Promise<void>}\n   * @param type - The type of RollTable to use (WMS or POWM).\n   */\n  static async Check(\n    type: SurgeType = WMSCONST.SURGE_FEAT_TYPE.WildMagicSurge,\n    actor: Actor,\n  ): Promise<string | undefined> {\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n      ) !== \"AUTO\"\n    ) {\n      return;\n    }\n    if (actor.system.details.level > 13) {\n      let rollTableResults: string;\n      rollTableResults = (await this.RollOnTable(type)) ?? \"\";\n      rollTableResults =\n        rollTableResults + \", \" + (await this.RollOnTable(type));\n      return rollTableResults;\n    } else {\n      return await this.RollOnTable(type);\n    }\n  }\n\n  static async RollOnTable(\n    type: SurgeType = WMSCONST.SURGE_FEAT_TYPE.WildMagicSurge,\n  ): Promise<string | undefined> {\n    let rollTableName: string;\n    if (type === WMSCONST.SURGE_FEAT_TYPE.PathOfWildMagic) {\n      rollTableName = game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_POWM_ROLLTABLE_NAME}`,\n      );\n    } else {\n      rollTableName = game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_ROLLTABLE_NAME}`,\n      );\n    }\n    if (rollTableName === undefined) {\n      Logger.error(\n        `No roll table name set in settings`,\n        \"rolltablemagicsurge.Check\",\n      );\n      return;\n    }\n\n    const surgeRollTable = game.tables.find(\n      (t: RollTable) => t.name === rollTableName,\n    );\n\n    if (!surgeRollTable) {\n      Logger.error(\n        `No roll table called ${rollTableName} found`,\n        \"rolltablemagicsurge.Check\",\n        game.tables,\n      );\n      return;\n    }\n\n    const result = await surgeRollTable?.roll().then((result: Roll) => {\n      Chat.Send(WMSCONST.CHAT_TYPE.TABLE, \"\", result, surgeRollTable);\n      return result;\n    });\n\n    if (result.results.length > 0) {\n      return result.results[0].text;\n    } else {\n      return;\n    }\n  }\n}\n\nexport default RollTableMagicSurge;\n", "import { WMSCONST } from \"../WMSCONST\";\n\nexport default class Resource {\n  static FLAG_NAME = \"wild-magic-surge-5e\";\n  static FLAG_OPTION = \"resource\";\n  static defaultValue: ResourceValue = {\n    label: \"Surge Chance\",\n    lr: false,\n    sr: false,\n    max: 20,\n    value: 1,\n  };\n\n  static async Reset(actor: Actor) {\n    await this._setupDefault(actor);\n  }\n\n  static async GetResource(actor: Actor): Promise<ResourceValue> {\n    const resourceType = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_RESOURCE_TYPE}`,\n    );\n\n    let resource = this.defaultValue;\n\n    switch (resourceType) {\n      case \"NONE\":\n        resource = <ResourceValue>actor.getFlag(this.FLAG_NAME, this.FLAG_OPTION);\n        break;\n      case \"PRIMARY\":\n        resource = actor.system.resources.primary;\n        break;\n      case \"SECONDARY\":\n        resource = actor.system.resources.secondary;\n        break;\n      case \"TERTIARY\":\n        resource = actor.system.resources.tertiary;\n        break;\n    }\n\n    if (!resource) {\n      this._setupDefault(actor);\n      resource = this.defaultValue;\n    }\n\n    return resource;\n  }\n\n  static async SetResource(actor: Actor, resourceValues: ResourceValues) {\n    const resourceType = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_RESOURCE_TYPE}`,\n    );\n    const resourceValue = this.defaultValue;\n    resourceValue.max = resourceValues.max;\n    resourceValue.value = resourceValues.value;\n\n    switch (resourceType) {\n      case \"NONE\":\n        actor.setFlag(this.FLAG_NAME, this.FLAG_OPTION, resourceValue);\n        break;\n      case \"PRIMARY\":\n        actor.update({\n          \"system.resources.primary\": resourceValue,\n        });\n        break;\n      case \"SECONDARY\":\n        actor.update({\n          \"system.resources.secondary\": resourceValue,\n        });\n        break;\n      case \"TERTIARY\":\n        actor.update({\n          \"system.resources.tertiary\": resourceValue,\n        });\n        break;\n    }\n  }\n\n  static async _setupDefault(actor: Actor): Promise<void> {\n    let maxValue = 20;\n    switch (\n      game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_SURGE_TYPE}`)\n    ) {\n      case `INCREMENTAL_CHECK_CHAOTIC`:\n        maxValue = 10;\n        break;\n      case `DIE_DESCENDING`:\n        maxValue = 6;\n        break;\n    }\n    await this.SetResource(actor, {\n      max: maxValue,\n      value: 1,\n    });\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport Chat from \"../Chat\";\nimport CallHooks from \"./CallHooks\";\nimport Resource from \"./Resource\";\n\nexport default class IncrementalCheck extends Resource {\n  static FLAG_NAME = \"wild-magic-surge-5e\";\n  static FLAG_OPTION = \"surge_increment_resource\";\n  static defaultValue: ResourceValue = {\n    label: \"Surge Chance\",\n    lr: false,\n    sr: false,\n    max: 20,\n    value: 1,\n  };\n\n  static async _callChanged(value: number) {\n    CallHooks.Call(\"IncrementalCheckChanged\", { value: value });\n\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_INCREMENTAL_CHECK_TO_CHAT}`,\n      )\n    ) {\n      Chat.Send(\n        WMSCONST.CHAT_TYPE.DEFAULT,\n        `${game.i18n.format(\n          \"WildMagicSurge5E.opt_incremental_check_to_chat_text_name\",\n        )} ${value}`,\n      );\n    }\n  }\n\n  static async Check(\n    actor: Actor,\n    rollValue?: number,\n    maxValue = 20,\n  ): Promise<boolean> {\n    const resourceValue: ResourceValue = await this.GetResource(actor);\n\n    if (\n      !resourceValue ||\n      (rollValue !== undefined && rollValue <= resourceValue.value)\n    ) {\n      this._setupDefault(actor);\n      return true;\n    } else {\n      if (resourceValue.value !== maxValue) {\n        resourceValue.value = resourceValue.value + 1;\n        await this.SetResource(actor, {\n          max: maxValue,\n          value: resourceValue.value,\n        });\n        this._callChanged(resourceValue.value);\n      }\n    }\n\n    return false;\n  }\n}\n", "import Logger from \"../Logger\";\nimport { WMSCONST } from \"../WMSCONST\";\n\nexport default class SpellLevelTrigger {\n  static Check(result: number, spellLevel: string): boolean {\n    const spellString = this._spellString(spellLevel);\n\n    if (!spellString) return false;\n\n    const spellLevelFormula = this._rollFormula(spellString);\n    if (!spellLevelFormula) {\n      this._warnSetup({ spellString, spellLevel });\n      return false;\n    }\n\n    switch (spellLevelFormula?.equation) {\n      case \"=\":\n        return result === spellLevelFormula.target;\n      case \">\":\n        return result > spellLevelFormula.target;\n      case \"<\":\n        return result < spellLevelFormula.target;\n      default:\n        this._warnSetup({ spellString, spellLevel });\n        return false;\n    }\n  }\n\n  static ParseRollFormula(spellLevel?: string): string {\n    const diceFormula = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_DIE}`,\n    );\n\n    if (!spellLevel) {\n      this._warnSetup({ spellLevel });\n      return diceFormula;\n    }\n\n    const spellString = this._spellString(spellLevel);\n\n    if (!spellString) {\n      this._warnSetup({ spellString, spellLevel });\n      return diceFormula;\n    }\n\n    const spellLevelFormula = this._rollFormula(spellString);\n    if (!spellLevelFormula) {\n      this._warnSetup({ spellString, spellLevel });\n      return diceFormula;\n    }\n    if (!spellLevelFormula.roll) {\n      spellLevelFormula.roll = diceFormula;\n    }\n\n    return spellLevelFormula.roll ?? \"1D20\";\n  }\n\n  static _rollFormula(spellString: string): SpellLevelFormula | undefined {\n    const spellFormula: SpellLevelFormula = {\n      equation: \"\",\n      target: 0,\n    };\n    const comparisonRegex = /^([=><]\\s\\d+)$/g;\n\n    if (!spellString.match(comparisonRegex)) {\n      const regex = /(.*)\\s([=><]\\s\\d+)/;\n      const result = spellString.match(regex);\n      if (result && result.length > 1) {\n        spellFormula.roll = result[1];\n        spellString = result[2];\n      } else {\n        return undefined;\n      }\n    }\n\n    const splitLevel: Array<string> = spellString.split(\" \");\n\n    spellFormula.equation = splitLevel[0];\n    spellFormula.target = parseInt(splitLevel[1]);\n\n    return spellFormula;\n  }\n\n  static _spellString(spellLevel: string) {\n    switch (spellLevel) {\n      case WMSCONST.SPELL_LEVELS.Cantrip:\n        return <string>(\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_TSL_CANTRIP}`,\n          )\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_1:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL1}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_2:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL2}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_3:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL3}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_4:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL4}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_5:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL5}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_6:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL6}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_7:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL7}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_8:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL8}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_9:\n        return <string>(\n          game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_LVL9}`)\n        );\n      case WMSCONST.SPELL_LEVELS.LEVEL_10:\n        return <string>(\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_TSL_LVL10}`,\n          )\n        );\n    }\n  }\n\n  static _warnSetup(data: unknown) {\n    Logger.warn(\n      `Cannot parse custom Spell Level trigger setting.`,\n      \"spellleveltrigger.Check\",\n      data,\n    );\n\n    ui.notifications?.warn(\n      `Wild Magic Surge 5e: Cannot parse custom Spell Level trigger setting. Check console for details.`,\n    );\n  }\n}\n", "import Logger from \"../Logger\";\nimport { WMSCONST } from \"../WMSCONST\";\nimport CallHooks from \"./CallHooks\";\nimport Resource from \"./Resource\";\n\nexport default class DieDescending extends Resource {\n  static defaultValue: ResourceValue = {\n    label: \"Surge Chance\",\n    lr: false,\n    sr: false,\n    max: 6,\n    value: 1,\n  };\n\n  private static async _callChanged(value: ResourceValue): Promise<void> {\n    CallHooks.Call(\"DieDescendingChanged\", value);\n  }\n\n  static async DieFormula(actor: Actor): Promise<DieValue> {\n    const resourceValue = await this.GetResource(actor);\n\n    switch (resourceValue.value) {\n      case 1:\n        return WMSCONST.DIE_VALUE.D20;\n      case 2:\n        return WMSCONST.DIE_VALUE.D12;\n      case 3:\n        return WMSCONST.DIE_VALUE.D10;\n      case 4:\n        return WMSCONST.DIE_VALUE.D8;\n      case 5:\n        return WMSCONST.DIE_VALUE.D6;\n      case 6:\n      case 7:\n        return WMSCONST.DIE_VALUE.D4;\n      default:\n        return WMSCONST.DIE_VALUE.D20;\n    }\n  }\n\n  static async Check(actor: Actor, rollValue: number): Promise<boolean> {\n    if (!actor) {\n      Logger.warn(\n        `Missing actor for Die Descending Check`,\n        \"diedescending.SetupDefault\",\n      );\n      return false;\n    }\n\n    const resourceValue = await this.GetResource(actor);\n\n    if (rollValue === 1) {\n      await this._setupDefault(actor);\n      return true;\n    } else {\n      switch (resourceValue.value) {\n        case 1:\n          resourceValue.value = 2;\n          break;\n        case 2:\n          resourceValue.value = 3;\n          break;\n        case 3:\n          resourceValue.value = 4;\n          break;\n        case 4:\n          resourceValue.value = 5;\n          break;\n        case 5:\n          resourceValue.value = 6;\n          break;\n        case 6:\n        case 7:\n          resourceValue.value = 6;\n          break;\n      }\n\n      await this.SetResource(actor, {\n        max: 6,\n        value: resourceValue.value,\n      });\n      await this._callChanged(resourceValue);\n    }\n\n    return false;\n  }\n}\n", "import { WMSCONST } from \"./WMSCONST\";\n\n/**\n * AutoEffects class for handling sequencer animations\n * @class AutoEffects\n */\nclass AutoEffects {\n  /**\n   * Checks to see if module is active\n   * @public\n   * @return {boolean}\n   */\n  static _isModuleActive(moduleName: string): boolean {\n    return game.modules.get(moduleName)?.active;\n  }\n\n  static _getJB2AFilePath(): string[] {\n    if (this._isModuleActive(\"jb2a_patreon\")) {\n      return [\n        \"modules/jb2a_patreon/Library/Generic/Energy/SwirlingSparkles_01_Regular_OrangePurple_400x400.webm\",\n        \"modules/jb2a_patreon/Library/Generic/Token_Border/TokenBorderCircleSpin_04_Regular_Blue_400x400.webm\",\n        \"modules/jb2a_patreon/Library/Generic/Marker/EnergyStrands_01_Dark_Green_600x600.webm\",\n      ];\n    }\n\n    if (this._isModuleActive(\"JB2A_DnD5e\")) {\n      return [\n        \"modules/JB2A_DnD5e/Library/Generic/Nature/SwirlingLeavesComplete01_02_Regular_Green_400x400.webm\",\n        \"modules/JB2A_DnD5e/Library/Generic/Token_Border/TokenBorderCircleSpin_04_Regular_Blue_400x400.webm\",\n        \"modules/JB2A_DnD5e/Library/Generic/Particles/ParticlesOutward02_03_Regular_GreenYellow_400x400.webm\",\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Runs the Wild Magic Surge animation\n   * @public\n   * @return {Promise<void>}\n   */\n  static async Run(tokenId: string | undefined): Promise<void> {\n    if (!tokenId) return;\n    if (\n      !game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_EFFECTS_ENABLED}`,\n      )\n    )\n      return;\n    if (!this._isModuleActive(\"sequencer\")) {\n      ui.notifications?.info(\n        `Wild Magic Surge 5e: Play animation on surge is enabled in settings but the sequencer module is not active/installed. Disable the play animation in settings or install and enable sequencer.`,\n      );\n      return;\n    }\n    if (\n      !this._isModuleActive(\"JB2A_DnD5e\") &&\n      !this._isModuleActive(\"jb2a_patreon\")\n    ) {\n      ui.notifications?.info(\n        `Wild Magic Surge 5e: Play animation on surge is enabled in settings but the JB2A module is not active/installed. Disable the play animation in settings or install and enable JB2A.`,\n      );\n      return;\n    }\n\n    const animationPath = this._getJB2AFilePath();\n\n    // @ts-expect-error TS(2304): Cannot find name 'Sequence'.\n    const wildMagicSurgeEffect = new Sequence(WMSCONST.MODULE_ID)\n      .effect()\n      .file(`${animationPath[0]}`)\n      .duration(10000)\n      .fadeIn(500)\n      .fadeOut(1000)\n      .atLocation(tokenId)\n      .effect()\n      .file(`${animationPath[1]}`)\n      .duration(10000)\n      .fadeIn(500)\n      .fadeOut(1000)\n      .atLocation(tokenId)\n      .effect()\n      .file(`${animationPath[2]}`)\n      .duration(10000)\n      .fadeIn(500)\n      .fadeOut(1000)\n      .atLocation(tokenId);\n\n    wildMagicSurgeEffect.play();\n  }\n}\n\nexport default AutoEffects;\n", "import { WMSCONST } from \"../WMSCONST\";\n\nexport default class SpellParser {\n  /**\n   * Returns whether the actor has the Wild Magic Feat in their items\n   * @param actor - Foundry Actor\n   * @return {boolean}\n   */\n  static IsWildMagicFeat(actor: Actor): boolean {\n    const surgeName = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WMS_NAME}`,\n    );\n    return (\n      actor.items.find(\n        (a: Item) => a.name === surgeName && a.type === \"feat\",\n      ) !== undefined\n    );\n  }\n\n  /**\n   * Returns whether the actor has the Path of Wild Magic Subclass in their items\n   * @param actor - Foundry Actor\n   * @return {boolean}\n   */\n  static IsPathOfWildMagicFeat(actor: Actor): boolean {\n    return (\n      actor.items.find(\n        (a: Item) =>\n          a.name ===\n            game.settings.get(\n              `${WMSCONST.MODULE_ID}`,\n              `${WMSCONST.OPT_POWM_NAME}`,\n            ) && a.type === \"subclass\",\n      ) !== undefined\n    );\n  }\n\n  /**\n   * Gets the Foundry Spell Level Name from the Item\n   * @param item - Item5e object\n   * @return {Promise<string>}\n   */\n  static SpellDetails(item: Item): string | undefined {\n    const minimumSpellLevelTrigger = parseInt(\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_MINIMUM_SPELL_LEVEL_TRIGGER}`,\n      ),\n    );\n\n    if (item?.system?.level === undefined) return;\n\n    if (\n      minimumSpellLevelTrigger > 0 &&\n      item.system.level < minimumSpellLevelTrigger\n    )\n      return undefined;\n\n    switch (item.system.level) {\n      case 0: {\n        if (\n          !game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_CANTRIP_SURGE_ENABLED}`,\n          )\n        ) {\n          return undefined;\n        } else {\n          return `Cantrip`;\n        }\n      }\n      case 1:\n        return `${item.system.level}st Level`;\n      case 2:\n        return `${item.system.level}nd Level`;\n      case 3:\n        return `${item.system.level}rd Level`;\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n        return `${item.system.level}th Level`;\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   * Gets the Foundry Spell Level from the Item\n   * @param item - Item5e object\n   * @return {string}\n   */\n  static SpellLevel(item: Item): string {\n    const result = SpellParser.SpellDetails(item);\n    if (result === undefined) return \"\";\n    return result;\n  }\n\n  /**\n   * Checks the Item for whether it is a Spell being cast\n   * @param item - Item5e object\n   * @return {boolean}\n   */\n  static IsSpell(item: Item): boolean {\n    const result = SpellParser.SpellDetails(item);\n    return result !== undefined && item.type === \"spell\";\n  }\n\n  /**\n   * Custom regex check for multiclass PCs. Returns if the spell cast was a Sorcerer spell.\n   * @param item - Item5e object\n   * @return {Promise<boolean>}\n   */\n  static IsSorcererSpell(item: Item): boolean {\n    const spellName = item.name;\n\n    const spellRegex = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SPELL_REGEX}`,\n    );\n\n    const isInverse = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SPELL_REGEX_INVERSE}`,\n    );\n\n    if (isInverse) {\n      return spellName?.match(spellRegex) ? false : true;\n    } else {\n      return !!spellName?.match(spellRegex);\n    }\n  }\n\n  /**\n   * Checks whether the Rage spell has been cast\n   * @param item - Item5e object\n   * @return {boolean}\n   */\n  static IsRage(item: Item): boolean {\n    const spellName = item.name;\n\n    return spellName === \"Rage\";\n  }\n\n  /**\n   * Checks whether the current actor is an NPC\n   * @param actor - Foundry Actor\n   * @return {Promise<boolean>}\n   */\n  static IsNPC(actor: Actor): boolean {\n    return actor ? actor.type === \"npc\" : false;\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport SpellParser from \"./SpellParser\";\n\nexport default class SurgeDetails {\n  _actor: Actor;\n  _item: Item;\n  _userId?: string;\n  _hasPathOfWildMagicFeat: boolean;\n  _raging: boolean;\n  _isASpell: boolean;\n  _spellLevel: string;\n  _isSorcererSpell: boolean;\n  _hasWildMagicFeat: boolean;\n  _isNpc: boolean;\n  _valid: boolean;\n\n  constructor(actor: Actor, item: Item) {\n    this._actor = actor;\n    this._item = item;\n\n    this._valid = false;\n\n    this._hasPathOfWildMagicFeat = SpellParser.IsPathOfWildMagicFeat(\n      this._actor,\n    );\n    this._raging = SpellParser.IsRage(this._item);\n    this._isASpell = SpellParser.IsSpell(this._item);\n    this._spellLevel = SpellParser.SpellLevel(this._item);\n    this._isSorcererSpell = SpellParser.IsSorcererSpell(this._item);\n    this._hasWildMagicFeat = SpellParser.IsWildMagicFeat(this._actor);\n    this._isNpc = SpellParser.IsNPC(this._actor);\n  }\n\n  get spellLevel(): string {\n    return this._spellLevel;\n  }\n\n  get hasPathOfWildMagicFeat(): boolean {\n    return this._hasPathOfWildMagicFeat;\n  }\n\n  get isSorcererSpellRegexMatch(): boolean | undefined {\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_SPELL_REGEX_ENABLED}`,\n      )\n    ) {\n      return this._isSorcererSpell;\n    }\n    return undefined;\n  }\n\n  get valid(): boolean {\n    if (this._hasPathOfWildMagicFeat) {\n      return this._raging;\n    }\n\n    if (!this._hasWildMagicFeat) {\n      return false;\n    }\n\n    if (this.isSorcererSpellRegexMatch !== undefined) {\n      return this._isASpell && this.isSorcererSpellRegexMatch;\n    }\n\n    let isValid = this._isASpell;\n\n    if (\n      !game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_ENABLE_NPCS}`)\n    ) {\n      isValid = isValid && !this._isNpc;\n    }\n\n    return isValid;\n  }\n}\n", "import Logger from \"./Logger\";\nimport { WMSCONST } from \"./WMSCONST\";\n\n/**\n * Runs a macro\n * @class TriggerMacro\n */\nclass TriggerMacro {\n  static async Run(actorId: string, tokenId: string): Promise<void> {\n    const macroName = game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TRIGGERMACRO_NAME}`,\n    );\n    if (\n      !game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_TRIGGERMACRO_ENABLE}`,\n      ) ||\n      !macroName\n    ) {\n      return;\n    }\n\n    const macro: Macro = game.macros.find(\n      (f) => f.name === macroName && f.isOwner,\n    );\n    if (!macro) {\n      Logger.error(\n        `Trigger Macro ${macroName} does not exist.`,\n        \"TriggerMacro.Run\",\n        macroName,\n      );\n      return;\n    }\n\n    const actor: Actor = game.actors?.get(actorId);\n    const token: Token = canvas.tokens?.get(tokenId);\n\n    macro.execute({ actor: actor, token: token });\n  }\n}\n\nexport default TriggerMacro;\n", "import { WMSCONST } from \"./WMSCONST\";\nimport Chat from \"./Chat\";\nimport TidesOfChaos from \"./TidesOfChaos\";\nimport RollTableMagicSurge from \"./RollTableMagicSurge\";\nimport IncrementalCheck from \"./utils/IncrementalCheck\";\nimport SpellLevelTrigger from \"./utils/SpellLevelTrigger\";\nimport DieDescending from \"./utils/DieDescending\";\nimport AutoEffects from \"./AutoEffects\";\nimport CallHooks from \"./utils/CallHooks\";\nimport SurgeDetails from \"./utils/SurgeDetails\";\nimport Logger from \"./Logger\";\nimport TriggerMacro from \"./TriggerMacro\";\n\n/**\n * Main entry point for Wild Magic Surge Checks\n * @class MagicSurgeCheck\n * @param actor - Foundry Actor\n * @example\n * let magicSurgeCheck = new MagicSurgeCheck(actor);\n */\nclass MagicSurgeCheck {\n  _actor: Actor;\n  _tokenId: string | undefined;\n  constructor(actor: Actor, tokenId: string | undefined) {\n    this._actor = actor;\n    this._tokenId = tokenId;\n  }\n\n  async _rollPlayerTrigger(\n    rollTableName: string,\n    chatType: string,\n    roll: Roll | undefined = undefined,\n  ) {\n    let chatSurgeMessage = \"\";\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n      ) === \"PLAYER_TRIGGER\"\n    ) {\n      chatSurgeMessage = `<br /><div class=\"card-buttons wms-roll-table-buttons\">\n          <button class=\"roll-table-wms\">\n          ${game.i18n.format(\n            \"WildMagicSurge5E.es_roll_on_table\",\n          )} ${rollTableName}\n          </button>\n      </div>`;\n    }\n    Chat.Send(\n      chatType,\n      `${game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_AUTO_D20_MSG}`,\n      )}${chatSurgeMessage}`,\n      roll,\n    );\n  }\n\n  /**\n   * Entry point for Chat Message Hook. Check the message is valid and if so do Surge checks.\n   * @param item - Item5e object\n   * @returns Promise<void>\n   */\n  async CheckItem(item: Item): Promise<void> {\n    const itemSurgeDetails = new SurgeDetails(this._actor, item);\n\n    if (!itemSurgeDetails.valid) return;\n\n    if (itemSurgeDetails.hasPathOfWildMagicFeat) {\n      if (\n        game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n        ) === \"PLAYER_TRIGGER\"\n      ) {\n        this._rollPlayerTrigger(\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_POWM_ROLLTABLE_NAME}`,\n          ),\n          WMSCONST.CHAT_TYPE.DEFAULT,\n        );\n      } else {\n        RollTableMagicSurge.Check(\n          WMSCONST.SURGE_FEAT_TYPE.PathOfWildMagic,\n          this._actor,\n        );\n      }\n    } else {\n      if (\n        game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_AUTO_D20}`)\n      ) {\n        await this.AutoSurgeCheck(\n          itemSurgeDetails.spellLevel,\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_SURGE_TYPE}`,\n          ),\n        );\n      } else {\n        Chat.RunMessageCheck();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns RollResult\n   */\n  async WildMagicSurgeRollCheck(\n    spellLevel?: string,\n  ): Promise<Roll | undefined> {\n    let diceFormula: DieValue = undefined;\n\n    switch (\n      game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_SURGE_TYPE}`)\n    ) {\n      case WMSCONST.ROLL_CHECK_TYPE.DIE_DESCENDING:\n        diceFormula = await DieDescending.DieFormula(this._actor);\n        break;\n      case WMSCONST.ROLL_CHECK_TYPE.SPELL_LEVEL_DEPENDENT_ROLL:\n        diceFormula = SpellLevelTrigger.ParseRollFormula(spellLevel);\n        break;\n      default:\n        diceFormula = game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_CUSTOM_ROLL_DICE_FORMULA}`,\n        );\n        break;\n    }\n\n    if (!diceFormula) {\n      Logger.error(\n        `Cannot find dice formula`,\n        \"magicsurgecheck.WildMagicSurgeRollCheck\",\n      );\n      return;\n    }\n\n    const data = this._actor ? this._actor.getRollData() : {};\n    const roll = new Roll(diceFormula, data);\n    await roll.evaluate({ allowInteractive: false });\n    await roll.toMessage();\n\n    return roll;\n  }\n\n  /**\n   * If there are more than 1 Surge numbers to check against, split them into an array.\n   * @private\n   * @param {string} resultValues\n   * @returns Array<string>\n   */\n  SplitRollResult(resultValues: string): Array<string> {\n    return resultValues.toString().replace(/\\s/g, \"\").split(\",\");\n  }\n\n  /**\n   * On a Default Wild Magic Surge, check the result of the roll against the specified roll target.\n   * @private\n   * @param {string} result\n   * @param {Comparison} comparison\n   * @returns boolean\n   */\n  DefaultMagicSurgeRollResult(result: number, comparison: Comparison): boolean {\n    const rollResult = result;\n    const rollResultTargets = this.SplitRollResult(\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_CUSTOM_ROLL_RESULT}`,\n      ),\n    );\n\n    for (const resultTarget of rollResultTargets) {\n      const rollResultTarget = parseInt(resultTarget);\n\n      switch (comparison) {\n        case WMSCONST.COMPARISON.EQ:\n          if (rollResult === rollResultTarget) {\n            return true;\n          }\n          break;\n        case WMSCONST.COMPARISON.GT:\n          if (rollResult > rollResultTarget) {\n            return true;\n          }\n          break;\n        case WMSCONST.COMPARISON.LT:\n          if (rollResult < rollResultTarget) {\n            return true;\n          }\n          break;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Automatically checks for a surge against the spell level and game type.\n   * @param {string} spellLevel\n   * @param {string} gameType\n   * @returns Promise<void>\n   */\n  async AutoSurgeCheck(spellLevel: string, gameType: string): Promise<void> {\n    let isSurge = false;\n    let roll: Roll | undefined;\n\n    let isAutoSurge = false;\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_SURGE_TOC_ENABLED}`,\n      )\n    ) {\n      if (await TidesOfChaos.IsTidesOfChaosUsed(this._actor)) {\n        isAutoSurge = true;\n        this.SurgeTidesOfChaos();\n      }\n    }\n\n    if (!isAutoSurge) {\n      roll = await this.WildMagicSurgeRollCheck(spellLevel);\n      if (!roll) return;\n      const rollTotal = roll.total ?? 1;\n      switch (gameType) {\n        case \"DEFAULT\":\n          isSurge = this.DefaultMagicSurgeRollResult(\n            rollTotal,\n            game.settings.get(\n              `${WMSCONST.MODULE_ID}`,\n              `${WMSCONST.OPT_CUSTOM_ROLL_RESULT_CHECK}`,\n            ),\n          );\n          break;\n        case \"INCREMENTAL_CHECK\":\n        case \"INCREMENTAL_CHECK_CHAOTIC\": {\n          const maxValue = gameType === `INCREMENTAL_CHECK_CHAOTIC` ? 10 : 20;\n          isSurge = await IncrementalCheck.Check(\n            this._actor,\n            rollTotal,\n            maxValue,\n          );\n          break;\n        }\n        case \"SPELL_LEVEL_DEPENDENT_ROLL\": {\n          isSurge = SpellLevelTrigger.Check(rollTotal, spellLevel);\n          break;\n        }\n        case \"DIE_DESCENDING\": {\n          isSurge = await DieDescending.Check(this._actor, rollTotal);\n          break;\n        }\n        default:\n          Logger.error(\n            `Cannot find gameType ${gameType}`,\n            \"magicsurgecheck.AutoSurgeCheck\",\n            gameType,\n          );\n          return;\n      }\n      this.SurgeWildMagic(isSurge, roll);\n    }\n  }\n\n  /**\n   * Fires a hook for external integrations when a surge happens.\n   * @private\n   * @param {boolean} isSurge\n   * @param {RollResult} rollResult\n   */\n  async _callIsSurgeHook(isSurge: boolean, rollResult?: Roll): Promise<void> {\n    CallHooks.Call(\"IsWildMagicSurge\", {\n      surge: isSurge,\n      result: rollResult?.result,\n      tokenId: this._tokenId,\n      actorId: this._actor.id,\n    });\n\n    if (isSurge && this._actor.id) {\n      TriggerMacro.Run(this._actor.id, this._actor.id);\n    }\n  }\n\n  /**\n   * Calls a standard Wild Magic Surge.\n   * @private\n   * @param isSurge -\n   * @param roll -\n   */\n  async SurgeWildMagic(isSurge: boolean, roll: Roll): Promise<void> {\n    if (isSurge) {\n      await this._actor.setFlag(\n        WMSCONST.MODULE_FLAG_NAME,\n        WMSCONST.HAS_SURGED_FLAG_OPTION,\n        true,\n      );\n      if (\n        game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_AUTO_D20_MSG_ENABLED}`,\n        )\n      ) {\n        this._rollPlayerTrigger(\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_ROLLTABLE_NAME}`,\n          ),\n          WMSCONST.CHAT_TYPE.ROLL,\n          roll,\n        );\n      }\n      TidesOfChaos.Check(this._actor);\n      const tableResult = await RollTableMagicSurge.Check(\n        undefined,\n        this._actor,\n      );\n      let flavorText = `${game.i18n.format(\n        \"WildMagicSurge5E.es_wild_magic_surge_with_roll\",\n      )} ${roll?.result}`;\n      if (tableResult) {\n        flavorText = tableResult;\n      }\n      this._callIsSurgeHook(true, roll);\n      this._callEncounterStatistic({\n        EventName: game.i18n.format(\"WildMagicSurge5E.es_wild_magic_surge\"),\n        actorId: this._actor.id,\n        FlavorText: flavorText,\n      });\n      AutoEffects.Run(this._tokenId);\n    } else {\n      await this._actor.setFlag(\n        WMSCONST.MODULE_FLAG_NAME,\n        WMSCONST.HAS_SURGED_FLAG_OPTION,\n        false,\n      );\n      if (\n        game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE_ENABLED}`,\n        )\n      ) {\n        Chat.Send(\n          WMSCONST.CHAT_TYPE.ROLL,\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE}`,\n          ),\n          roll,\n        );\n      }\n      this._callIsSurgeHook(false, roll);\n    }\n  }\n\n  /**\n   * Calls the Surge for the Tides of Chaos auto surge.\n   * @private\n   */\n  async SurgeTidesOfChaos(): Promise<void> {\n    await this._actor.setFlag(\n      WMSCONST.MODULE_FLAG_NAME,\n      WMSCONST.HAS_SURGED_FLAG_OPTION,\n      true,\n    );\n    const tableResult = await RollTableMagicSurge.Check(\n      WMSCONST.SURGE_FEAT_TYPE.TidesOfChaosSurge,\n      this._actor,\n    );\n    let flavorText = `${game.i18n.format(\n      \"WildMagicSurge5E.es_tides_of_chaos\",\n    )}`;\n    if (tableResult) {\n      flavorText = tableResult;\n    }\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_AUTO_D20_MSG_ENABLED}`,\n      )\n    ) {\n      this._rollPlayerTrigger(\n        game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_ROLLTABLE_NAME}`,\n        ),\n        WMSCONST.CHAT_TYPE.DEFAULT,\n      );\n    }\n    TidesOfChaos.Check(this._actor);\n    IncrementalCheck.Reset(this._actor);\n    DieDescending.Reset(this._actor);\n    this._callIsSurgeHook(true);\n    AutoEffects.Run(this._tokenId);\n    this._callEncounterStatistic({\n      EventName: game.i18n.format(\"WildMagicSurge5E.es_wild_magic_surge\"),\n      actorId: this._actor.id,\n      FlavorText: flavorText,\n    });\n  }\n\n  async _callEncounterStatistic(\n    encounterStatisticsEvent: EncounterStatisticsEvent,\n  ) {\n    if (\n      game.settings.get(\n        `${WMSCONST.MODULE_ID}`,\n        `${WMSCONST.OPT_ENCOUNTER_STATS_ENABLED}`,\n      )\n    ) {\n      if (game.modules.get(\"encounter-stats\")?.active) {\n        Hooks.callAll(`encounter-stats.customEvent`, {\n          EventName: encounterStatisticsEvent.EventName,\n          actorId: encounterStatisticsEvent.actorId,\n          FlavorText: encounterStatisticsEvent.FlavorText,\n        });\n      } else {\n        ui.notifications?.info(\n          `Wild Magic Surge 5e: Encounter Statistics module is not installed or enabled in settings. Disable sending events in settings or install/enable the Encounter Statistics module.`,\n        );\n      }\n    }\n  }\n}\n\nexport default MagicSurgeCheck;\n", "import { WMSCONST } from \"./WMSCONST\";\nimport IncrementalCheck from \"./utils/IncrementalCheck\";\nimport SpellParser from \"./utils/SpellParser\";\nimport Chat from \"./Chat\";\n\n/**\n * Checks for Incremental surge on each round\n * @class RoundCheck\n */\nclass RoundCheck {\n  /**\n   * Checks for and does an incremental check for a surge on a new combat round\n   * @return {Promise<void>}\n   */\n  static async Check(actor: Actor): Promise<void> {\n    if (\n      game.settings.get(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_AUTO_D20}`)\n    ) {\n      if (SpellParser.IsWildMagicFeat(actor)) {\n        if (\n          game.settings.get(\n            `${WMSCONST.MODULE_ID}`,\n            `${WMSCONST.OPT_ENABLE_NPCS}`,\n          )\n        ) {\n          await IncrementalCheck.Check(actor, undefined, 10);\n        } else {\n          if (!SpellParser.IsNPC(actor)) {\n            await IncrementalCheck.Check(actor, undefined, 10);\n          }\n        }\n      }\n    } else {\n      await Chat.RunMessageCheck();\n    }\n  }\n}\n\nexport default RoundCheck;\n", "import { WMSCONST } from \"../WMSCONST\";\n\nexport function SettingsList(settings: any) {\n  const chatSettingsList = [];\n\n  for (const element of settings) {\n    const setting = element;\n\n    for (const [key, value] of (game.settings as any).settings.entries()) {\n      if (key === `${WMSCONST.MODULE_ID}.${setting}`) {\n        const settingValue = game.settings.get(WMSCONST.MODULE_ID, setting);\n\n        const choicesSelect = [];\n        let isArray = false;\n        if (value.choices) {\n          isArray = true;\n          for (const keyChoice in value.choices) {\n            choicesSelect.push({\n              key: keyChoice.toString(),\n              value: value.choices[keyChoice],\n              selected: keyChoice.toString() === settingValue,\n            });\n          }\n        }\n\n        chatSettingsList.push({\n          module: value.namespace ? value.namespace : value.module,\n          key: value.key,\n          type: value.type.name,\n          isBoolean: value.type.name === \"Boolean\",\n          isString: value.type.name === \"String\" && !value.choices,\n          isArray: isArray,\n          displayname: game.i18n.format(value.name),\n          hint: value.hint ? game.i18n.format(value.hint) : \"\",\n          choices: value.choices ? value.choices : [],\n          value: settingValue,\n          choicesSelect: choicesSelect,\n        });\n      }\n    }\n  }\n\n  return chatSettingsList;\n}\n\nexport function UpdateObject(formData: any) {\n  for (const key in formData) {\n    const keySplit = key.split(\".\");\n    game.settings.set(keySplit[0], keySplit[1], formData[key]);\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport class ChatSettingsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_chat_message\"),\n      template: \"modules/wild-magic-surge-5e/templates/settings.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'ChatSettingsPanel' is ... Remove this comment to see the full error message\n  getData() {\n    const settings = [\n      WMSCONST.OPT_CHAT_MSG,\n      WMSCONST.OPT_CHAT_MSG_ENABLED,\n      WMSCONST.OPT_AUTO_D20_MSG,\n      WMSCONST.OPT_AUTO_D20_MSG_ENABLED,\n      WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE,\n      WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE_ENABLED,\n    ];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'ChatSettingsPane... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport class IncrementalSettingsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_incremental\"),\n      template: \"modules/wild-magic-surge-5e/templates/settings.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'IncrementalSettingsPan... Remove this comment to see the full error message\n  getData() {\n    const settings = [WMSCONST.OPT_INCREMENTAL_CHECK_TO_CHAT];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'IncrementalSetti... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport class SpellLevelSettingsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_spell_level_dep\"),\n      template: \"modules/wild-magic-surge-5e/templates/settings.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'SpellLevelSettingsPane... Remove this comment to see the full error message\n  getData() {\n    const settings = [\n      WMSCONST.OPT_TSL_DIE,\n      WMSCONST.OPT_TSL_CANTRIP,\n      WMSCONST.OPT_TSL_LVL1,\n      WMSCONST.OPT_TSL_LVL2,\n      WMSCONST.OPT_TSL_LVL3,\n      WMSCONST.OPT_TSL_LVL4,\n      WMSCONST.OPT_TSL_LVL5,\n      WMSCONST.OPT_TSL_LVL6,\n      WMSCONST.OPT_TSL_LVL7,\n      WMSCONST.OPT_TSL_LVL8,\n      WMSCONST.OPT_TSL_LVL9,\n      WMSCONST.OPT_TSL_LVL10,\n    ];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'SpellLevelSettin... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport class StandardSettingsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_standard_phb\"),\n      template: \"modules/wild-magic-surge-5e/templates/settings.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'StandardSettingsPanel'... Remove this comment to see the full error message\n  getData() {\n    const settings = [\n      WMSCONST.OPT_CUSTOM_ROLL_DICE_FORMULA,\n      WMSCONST.OPT_CUSTOM_ROLL_RESULT_CHECK,\n      WMSCONST.OPT_CUSTOM_ROLL_RESULT,\n    ];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'StandardSettings... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import { WMSCONST } from \"../WMSCONST\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport class SpellRegexSettingsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_spell_regex\"),\n      template: \"modules/wild-magic-surge-5e/templates/settings.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'SpellRegexSettingsPane... Remove this comment to see the full error message\n  getData() {\n    const settings = [WMSCONST.OPT_SPELL_REGEX_ENABLED, WMSCONST.OPT_SPELL_REGEX, WMSCONST.OPT_SPELL_REGEX_INVERSE];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'SpellRegexSettin... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import { WMSCONST } from \"./WMSCONST\";\nimport {\n  ChatSettingsPanel,\n  IncrementalSettingsPanel,\n  SpellLevelSettingsPanel,\n  StandardSettingsPanel,\n  SpellRegexSettingsPanel,\n} from \"./panels/index\";\n\nclass ModuleSettings {\n  /**\n   * Register all module settings\n   * @public\n   * @return {void}\n   */\n  static Register(): void {\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_AUTO_D20}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_auto_d20_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_auto_d20_hint\"),\n        scope: \"world\",\n        config: true,\n        default: true,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WMS_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_wms_feat_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_wms_feat_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"Wild Magic Surge\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SPELL_REGEX_ENABLED}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_enable_spell_regex_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_enable_spell_regex_hint\"),\n        scope: \"world\",\n        config: false,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SPELL_REGEX_INVERSE}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_spell_regex_inverse_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_spell_regex_inverse_hint\"),\n        scope: \"world\",\n        config: false,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SPELL_REGEX}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_spell_regex_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_spell_regex_hint\"),\n        scope: \"world\",\n        config: false,\n        default: \"\\\\(S\\\\)\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WHISPER_GM}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_whisper_gm_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_whisper_gm_hint\"),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_WHISPER_GM_ROLL_CHAT}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_whisper_gm_roll_chat_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_whisper_gm_roll_chat_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SURGE_TYPE}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_surge_type_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_surge_type_hint\"),\n        scope: \"world\",\n        config: true,\n        choices: WMSCONST.SURGE_TYPE,\n        default: \"Default\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_RESOURCE_TYPE}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_resource_type_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_resource_type_hint\"),\n        scope: \"world\",\n        config: true,\n        choices: WMSCONST.RESOURCE_TYPE,\n        default: \"None\",\n        type: String,\n      },\n    );\n\n    game.settings.registerMenu(\n      `${WMSCONST.MODULE_ID}`,\n      `SpellRegexSettingsPanel`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.settings_panel_spell_regex\"),\n        label: game.i18n.format(\"WildMagicSurge5E.configure\"),\n        icon: \"fas fa-cog\",\n        scope: \"world\",\n        type: SpellRegexSettingsPanel,\n        restricted: true,\n      },\n    );\n\n    game.settings.registerMenu(\n      `${WMSCONST.MODULE_ID}`,\n      `StandardSettingsPanel`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.settings_panel_standard_phb\"),\n        label: game.i18n.format(\"WildMagicSurge5E.configure\"),\n        icon: \"fas fa-cog\",\n        scope: \"world\",\n        type: StandardSettingsPanel,\n        restricted: true,\n      },\n    );\n\n    game.settings.registerMenu(\n      `${WMSCONST.MODULE_ID}`,\n      `SpellLevelSettingsPanel`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.settings_panel_spell_level_dep\",\n        ),\n        label: game.i18n.format(\"WildMagicSurge5E.configure\"),\n        icon: \"fas fa-cog\",\n        scope: \"world\",\n        type: SpellLevelSettingsPanel,\n        restricted: true,\n      },\n    );\n\n    game.settings.registerMenu(\n      `${WMSCONST.MODULE_ID}`,\n      `IncrementalSettingsPanel`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.settings_panel_incremental\"),\n        label: game.i18n.format(\"WildMagicSurge5E.configure\"),\n        icon: \"fas fa-cog\",\n        scope: \"world\",\n        type: IncrementalSettingsPanel,\n        restricted: true,\n      },\n    );\n\n    game.settings.registerMenu(`${WMSCONST.MODULE_ID}`, `ChatSettingsPanel`, {\n      name: game.i18n.format(\"WildMagicSurge5E.settings_panel_chat_message\"),\n      label: game.i18n.format(\"WildMagicSurge5E.configure\"),\n      icon: \"fas fa-cog\",\n      scope: \"world\",\n      type: ChatSettingsPanel,\n      restricted: true,\n    });\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_INCREMENTAL_CHECK_TO_CHAT}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_incremental_check_to_chat_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_incremental_check_to_chat_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CHAT_MSG}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_chat_msg_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_chat_msg_hint\"),\n        scope: \"world\",\n        config: false,\n        default: \"Wild Magic Check - Roll a [[/r d20]]\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CHAT_MSG_ENABLED}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: true,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_AUTO_D20_MSG}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_auto_d20_msg_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_auto_d20_msg_hint\"),\n        scope: \"world\",\n        config: false,\n        default: \"Wild Magic Surge!\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_AUTO_D20_MSG_ENABLED}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: true,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_no_surge_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_no_surge_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: \"No wild magic surge\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_AUTO_D20_MSG_NO_SURGE_ENABLED}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_auto_d20_msg_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: true,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_enabled_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_enabled_hint\"),\n        scope: \"world\",\n        config: true,\n        choices: WMSCONST.ROLLTABLE_TYPE,\n        default: \"Default\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ROLLTABLE_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"Wild Magic Surge 5e (PHB)\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_POWM_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_powm_feat_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_powm_feat_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"Path of Wild Magic\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_POWM_ROLLTABLE_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_powm_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_rolltable_powm_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"Path of Wild Magic Table\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CUSTOM_ROLL_DICE_FORMULA}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_custom_roll_dice_formula_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_custom_roll_dice_formula_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        default: WMSCONST.DIE_VALUE.D20,\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CUSTOM_ROLL_RESULT_CHECK}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_custom_roll_result_check_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_custom_roll_result_check_hint\",\n        ),\n        scope: \"world\",\n        config: false,\n        choices: WMSCONST.ROLL_COMPARISON,\n        default: WMSCONST.COMPARISON.EQ,\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CUSTOM_ROLL_RESULT}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_custom_roll_result_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_custom_roll_result_hint\"),\n        scope: \"world\",\n        config: false,\n        default: \"1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(`${WMSCONST.MODULE_ID}`, `${WMSCONST.OPT_TSL_DIE}`, {\n      name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_die_name\"),\n      hint: game.i18n.format(\"WildMagicSurge5E.opt_tsl_die_hint\"),\n      scope: \"world\",\n      config: false,\n      default: WMSCONST.DIE_VALUE.D20,\n      type: String,\n    });\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_CANTRIP}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_cantrip_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl1_hint\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL1}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl1_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL2}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl2_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL3}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl3_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL4}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl4_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL5}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl5_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL6}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl6_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL7}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl7_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL8}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl8_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL9}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl9_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TSL_LVL10}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_tsl_lvl10_name\"),\n        scope: \"world\",\n        config: false,\n        default: \"= 1\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TOC_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_toc_feat_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_toc_feat_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"Tides of Chaos\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SURGE_TOC_ENABLED}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_enable_surge_toc_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_enable_surge_toc_hint\"),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ENABLE_TOC}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_enable_toc_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_enable_toc_hint\"),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_MINIMUM_SPELL_LEVEL_TRIGGER}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_minimum_spell_level_trigger_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_minimum_spell_level_trigger_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: \"0\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_CANTRIP_SURGE_ENABLED}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_cantrip_surge_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_cantrip_surge_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_EFFECTS_ENABLED}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_enable_effects_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_enable_effects_hint\"),\n        scope: \"world\",\n        config: true,\n        default: true,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ENABLE_NPCS}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_enable_npcs_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_enable_npcs_hint\"),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TRIGGERMACRO_ENABLE}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_triggermacro_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_triggermacro_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_TRIGGERMACRO_NAME}`,\n      {\n        name: game.i18n.format(\"WildMagicSurge5E.opt_triggermacro_name_name\"),\n        hint: game.i18n.format(\"WildMagicSurge5E.opt_triggermacro_name_hint\"),\n        scope: \"world\",\n        config: true,\n        default: \"WMSMacro\",\n        type: String,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ENCOUNTER_STATS_ENABLED}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_encounter_stats_enabled_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_encounter_stats_enabled_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n      },\n    );\n\n    game.settings.register(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SHOW_WMS_DEBUG_OPTION}`,\n      {\n        name: game.i18n.format(\n          \"WildMagicSurge5E.opt_show_wms_debug_option_name\",\n        ),\n        hint: game.i18n.format(\n          \"WildMagicSurge5E.opt_show_wms_debug_option_hint\",\n        ),\n        scope: \"world\",\n        config: true,\n        default: true,\n        requiresReload: true,\n        type: Boolean,\n      },\n    );\n  }\n}\n\nexport default ModuleSettings;\n", "import { WMSCONST } from \"../WMSCONST\";\nimport TidesOfChaos from \"../TidesOfChaos\";\nimport SpellParser from \"../utils/SpellParser\";\n\nexport class ActorHelperPanel extends FormApplication {\n  protected _updateObject(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _event: Event,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _formData?: object | undefined\n  ): Promise<unknown> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  object!: Actor;\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: game.i18n.format(\"WildMagicSurge5E.settings_panel_information\"),\n      template: \"modules/wild-magic-surge-5e/templates/ActorHelperPanel.html\",\n      id: `${WMSCONST.MODULE_FLAG_NAME}-actor-help`,\n      width: 480,\n      height: \"300\",\n      closeOnSubmit: true,\n    });\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'ActorHelperPanel' is n... Remove this comment to see the full error message\n  async getData() {\n    const actor = this.object;\n\n    const hasWildMagicFeat = SpellParser.IsWildMagicFeat(actor);\n    const hasTidesOfChaos = await TidesOfChaos.IsTidesOfChaosSetup(actor);\n\n    return <ModuleSetup>{\n      actor: {\n        name: actor.name,\n      },\n      settings: {\n        isValid: hasWildMagicFeat && hasTidesOfChaos.isValid,\n        hasWildMagicFeat: hasWildMagicFeat,\n        hasTidesOfChaosResource: hasTidesOfChaos.hasTidesOfChaosResource,\n        hasTidesOfChaosFeat: hasTidesOfChaos.hasTidesOfChaosFeat,\n      },\n    };\n  }\n}\n", "import { WMSCONST } from \"./WMSCONST\";\nimport MagicSurgeCheck from \"./MagicSurgeCheck\";\nimport IncrementalCheck from \"./utils/IncrementalCheck\";\nimport RoundCheck from \"./RoundCheck\";\nimport ModuleSettings from \"./ModuleSettings\";\nimport { ActorHelperPanel } from \"./panels/ActorHelperPanel\";\nimport { RoundData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/client/data/documents/combat\";\nimport Logger from \"./Logger\";\nimport RollTableMagicSurge from \"./RollTableMagicSurge\";\n\nHooks.on(\"init\", function () {\n  Logger.log(`Registering ${WMSCONST.MODULE_NAME} Settings.`, \"module.init\");\n\n  ModuleSettings.Register();\n\n  Logger.log(\n    `Settings for ${WMSCONST.MODULE_NAME} registered successfully.`,\n    \"module.init\",\n  );\n\n  Hooks.on(\n    \"wild-magic-surge-5e.manualTriggerWMS\",\n    async function (actor: Actor, roll: Roll) {\n      if (roll && actor) {\n        const wildMagicSurgeCheck = new MagicSurgeCheck(\n          actor,\n          getTokenIdByActorId(actor.id),\n        );\n        wildMagicSurgeCheck.SurgeWildMagic(true, roll);\n      }\n    },\n  );\n\n  Hooks.on(\n    \"renderChatMessage\",\n    async function (app: FormApplication, html: object) {\n      const rollTableButton = html.find(\".roll-table-wms\");\n      if (rollTableButton && rollTableButton.length > 0) {\n        rollTableButton.unbind();\n        rollTableButton.on(\"click\", (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          RollTableMagicSurge.RollOnTable();\n        });\n      }\n    },\n  );\n});\n\nfunction getTokenIdByActorId(actorId: string): string | undefined {\n  return canvas.tokens?.placeables?.find((f) => f.actor?.id === actorId)?.id;\n}\n\nfunction Migrate() {\n  const rollTableType = game.settings.get(\n    `${WMSCONST.MODULE_ID}`,\n    `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n  );\n  if (rollTableType === \"true\") {\n    game.settings.set(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n      WMSCONST.ROLLTABLE_TYPE.AUTO,\n    );\n  }\n  if (rollTableType === \"false\") {\n    game.settings.set(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_ROLLTABLE_ENABLE}`,\n      WMSCONST.ROLLTABLE_TYPE.DEFAULT,\n    );\n  }\n}\n\nHooks.once(\"ready\", async function () {\n  Migrate();\n\n  if (game.user?.isGM) {\n    game.socket?.on(\n      \"module.wild-magic-surge-5e\",\n      async function (payload: unknown) {\n        if (payload.event === \"SurgeCheck\") {\n          const surgeCheckData = payload.data;\n          const actor = game.actors.get(surgeCheckData.actorId);\n          const magicSurgeCheck = new MagicSurgeCheck(\n            actor,\n            surgeCheckData.tokenId,\n          );\n          magicSurgeCheck.CheckItem(surgeCheckData.item);\n        }\n      },\n    );\n  }\n\n  Hooks.on(\"dnd5e.postUseActivity\", (activity: Item) => {\n    const item = activity.item;\n    if (item.actor) {\n      const tokenId = getTokenIdByActorId(item?.actor.id);\n      if (game.user?.isGM) {\n        const magicSurgeCheck = new MagicSurgeCheck(item.actor, tokenId);\n        magicSurgeCheck.CheckItem(item);\n      } else {\n        game.socket?.emit(\"module.wild-magic-surge-5e\", {\n          event: \"SurgeCheck\",\n          data: {\n            actorId: item?.actor.id,\n            tokenId: tokenId,\n            item: item,\n          },\n        });\n      }\n    }\n  });\n\n  if (game.user?.isGM) {\n    Hooks.on(\"updateCombat\", async function (roundData: RoundData) {\n      if (\n        game.settings.get(\n          `${WMSCONST.MODULE_ID}`,\n          `${WMSCONST.OPT_SURGE_TYPE}`,\n        ) === `INCREMENTAL_CHECK_CHAOTIC`\n      ) {\n        if (!roundData.combatant?.actor) {\n          return false;\n        }\n        RoundCheck.Check(roundData.combatant?.actor);\n      }\n    });\n  }\n\n  Hooks.on(\n    \"wild-magic-surge-5e.ResetIncrementalCheck\",\n    async function (actorId: string) {\n      const actor = game.actors.get(actorId);\n      if (!actor) {\n        return false;\n      }\n      await IncrementalCheck.Reset(actor);\n    },\n  );\n\n  if (\n    game.settings.get(\n      `${WMSCONST.MODULE_ID}`,\n      `${WMSCONST.OPT_SHOW_WMS_DEBUG_OPTION}`,\n    )\n  ) {\n    Hooks.on(\n      \"renderActorSheet\",\n      async function (app: FormApplication, html: object, data: object) {\n        const openButton = $(\n          `<a class=\"open-actor-wms\" title=\"Wild Magic Surge 5e Information\"><i class=\"fas fa-wrench\"></i>WMS</a>`,\n        );\n        openButton.on(\"click\", () => {\n          new ActorHelperPanel(app.document, { actor: data.actor }).render(\n            true,\n          );\n        });\n        html.closest(\".app\").find(\".open-actor-wms\").remove();\n        const titleElement = html.closest(\".app\").find(\".window-title\");\n        if (!app._minimized) openButton.insertAfter(titleElement);\n      },\n    );\n  }\n});\n"],
  "mappings": "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",
  "names": ["WMSCONST", "CallHooks", "hookName", "value", "Chat", "type", "message", "rollObject", "rollTable", "__async", "isWhisperRollResultGM", "WMSCONST", "isWhisperAutoRollTableGM", "gmsToWhisper", "u", "chatData", "roll", "isWhisperGM", "isRollOnTableButton", "_a", "rollResult", "surgeRollTable", "results", "template", "CallHooks", "TidesOfChaos", "actor", "__async", "WMSCONST", "tidesItemData", "updates", "tidesItem", "featName", "tidesOfChaosResourceSetup", "hasTidesOfChaosResource", "resourceName", "_a", "_b", "_c", "_d", "item", "a", "TidesOfChaos_default", "Logger", "description", "module", "data", "Logger_default", "RollTableMagicSurge", "__async", "type", "WMSCONST", "actor", "_a", "rollTableResults", "rollTableName", "Logger_default", "surgeRollTable", "t", "result", "Chat", "RollTableMagicSurge_default", "Resource", "actor", "__async", "resourceType", "WMSCONST", "resource", "resourceValues", "resourceValue", "maxValue", "IncrementalCheck", "Resource", "value", "__async", "CallHooks", "WMSCONST", "Chat", "actor", "rollValue", "maxValue", "resourceValue", "SpellLevelTrigger", "result", "spellLevel", "spellString", "spellLevelFormula", "_a", "diceFormula", "WMSCONST", "spellFormula", "comparisonRegex", "regex", "splitLevel", "data", "Logger_default", "DieDescending", "Resource", "value", "__async", "CallHooks", "actor", "WMSCONST", "rollValue", "Logger_default", "resourceValue", "AutoEffects", "moduleName", "_a", "tokenId", "__async", "_b", "WMSCONST", "animationPath", "AutoEffects_default", "SpellParser", "_SpellParser", "actor", "surgeName", "WMSCONST", "a", "item", "_a", "minimumSpellLevelTrigger", "result", "spellName", "spellRegex", "SurgeDetails", "actor", "item", "SpellParser", "WMSCONST", "isValid", "TriggerMacro", "actorId", "tokenId", "__async", "_a", "_b", "macroName", "WMSCONST", "macro", "f", "Logger_default", "actor", "token", "TriggerMacro_default", "MagicSurgeCheck", "actor", "tokenId", "rollTableName", "chatType", "roll", "__async", "chatSurgeMessage", "WMSCONST", "Chat", "item", "itemSurgeDetails", "SurgeDetails", "RollTableMagicSurge_default", "spellLevel", "diceFormula", "DieDescending", "SpellLevelTrigger", "Logger_default", "data", "resultValues", "result", "comparison", "rollResult", "rollResultTargets", "resultTarget", "rollResultTarget", "gameType", "_a", "isSurge", "isAutoSurge", "TidesOfChaos_default", "rollTotal", "maxValue", "IncrementalCheck", "CallHooks", "TriggerMacro_default", "tableResult", "flavorText", "AutoEffects_default", "encounterStatisticsEvent", "_b", "MagicSurgeCheck_default", "RoundCheck", "actor", "__async", "WMSCONST", "SpellParser", "IncrementalCheck", "Chat", "RoundCheck_default", "SettingsList", "settings", "chatSettingsList", "element", "setting", "key", "value", "WMSCONST", "settingValue", "choicesSelect", "isArray", "keyChoice", "UpdateObject", "formData", "keySplit", "ChatSettingsPanel", "WMSCONST", "settings", "SettingsList", "_event", "formData", "UpdateObject", "IncrementalSettingsPanel", "WMSCONST", "settings", "SettingsList", "_event", "formData", "UpdateObject", "SpellLevelSettingsPanel", "WMSCONST", "settings", "SettingsList", "_event", "formData", "UpdateObject", "StandardSettingsPanel", "WMSCONST", "settings", "SettingsList", "_event", "formData", "UpdateObject", "SpellRegexSettingsPanel", "WMSCONST", "settings", "SettingsList", "_event", "formData", "UpdateObject", "ModuleSettings", "WMSCONST", "SpellRegexSettingsPanel", "StandardSettingsPanel", "SpellLevelSettingsPanel", "IncrementalSettingsPanel", "ChatSettingsPanel", "ModuleSettings_default", "ActorHelperPanel", "_event", "_formData", "WMSCONST", "__async", "actor", "hasWildMagicFeat", "SpellParser", "hasTidesOfChaos", "TidesOfChaos_default", "Logger_default", "WMSCONST", "ModuleSettings_default", "actor", "roll", "__async", "MagicSurgeCheck_default", "getTokenIdByActorId", "app", "html", "rollTableButton", "e", "RollTableMagicSurge_default", "actorId", "_a", "_b", "_c", "f", "Migrate", "rollTableType", "payload", "surgeCheckData", "activity", "item", "tokenId", "roundData", "RoundCheck_default", "IncrementalCheck", "data", "openButton", "ActorHelperPanel", "titleElement"]
}
